Nonterminals useless in grammar

   hstring
   bstring
   cstring
   modulereference
   NamedValue


Terminals unused in grammar

   CARET
   PIPE
   ENDL
   EXCLAIM
   SET
   COMPONENT
   ABSENT
   CONTAINING
   FROM
   INCLUDES
   SETTINGS
   PRESENT
   PATTERN
   WITH
   CHAR
   DATE
   DATE_TIME
   DURATION
   EMBEDDED
   PDV
   EXTERNAL
   RELATIVE_OID_IRI
   OBJECT
   IDENTIFIER
   RELATIVE_IRI
   RELATIVE_OID
   TIME
   TIME_OF_DAY
   CONTAINS
   "hstring"
   "bstring"
   "cstring"
   DEFINITIONS
   BEGIN
   END
   TAGS
   INSTRUCTIONS
   EXPORTS
   IMPORTS
   EXTENSIBILITY
   IMPLIED
   AUTOMATIC


Rules useless in grammar

  182 hstring: "hstring"

  183 bstring: "bstring"

  184 cstring: "cstring"

  185 modulereference: typereference

  186 NamedValue: identifier Value


State 95 conflicts: 1 shift/reduce
State 102 conflicts: 1 shift/reduce
State 133 conflicts: 1 shift/reduce
State 145 conflicts: 1 shift/reduce
State 160 conflicts: 1 shift/reduce
State 189 conflicts: 1 shift/reduce
State 199 conflicts: 1 reduce/reduce
State 224 conflicts: 1 shift/reduce
State 228 conflicts: 1 shift/reduce
State 237 conflicts: 1 shift/reduce
State 261 conflicts: 1 shift/reduce


Grammar

    0 $accept: Top $end

    1 $@1: %empty

    2 Top: $@1 AssignmentList

    3 empty: %empty

    4 identifier: "identifier"

    5 typereference: "typereference"

    6 valuereference: identifier

    7 number: "positive integer"
    8       | "negative integer"

    9 encodingreference: identifier

   10 AssignmentList: AssignmentList Assignment
   11               | Assignment

   12 Assignment: TypeAssignment
   13           | ValueAssignment

   14 TypeAssignment: typereference "::=" optTypePrefix Type

   15 ValueAssignment: valuereference Type "::=" Value

   16 Value: BuiltinValue
   17      | DefinedValue

   18 BuiltinValue: TRUE
   19             | FALSE
   20             | NULL
   21             | "positive integer"
   22             | "negative integer"
   23             | HEXINT
   24             | "positive real number"
   25             | "negative real number"
   26             | PLUS_INFINITY
   27             | MINUS_INFINITY
   28             | NOT_A_NUMBER

   29 DefinedValue: valuereference

   30 Type: BitStringType
   31     | BooleanType
   32     | CharacterStringType
   33     | ChoiceType
   34     | EnumeratedType
   35     | IntegerType
   36     | NullType
   37     | OctetStringType
   38     | RealType
   39     | SequenceOfType
   40     | SequenceType
   41     | DefinedType
   42     | ConstrainedType

   43 ConstrainedType: Type Constraint

   44 CharacterStringType: RestrictedCharacterStringType
   45                    | UnrestrictedCharacterStringType

   46 UnrestrictedCharacterStringType: CHARACTER STRING

   47 RestrictedCharacterStringType: BMPString
   48                              | GeneralString
   49                              | GraphicString
   50                              | IA5String
   51                              | ISO646String
   52                              | NumericString
   53                              | PrintableString
   54                              | TeletexString
   55                              | T61String
   56                              | UniversalString
   57                              | UTF8String
   58                              | VideotexString
   59                              | VisibleString

   60 DefinedType: typereference

   61 BooleanType: BOOLEAN

   62 IntegerType: INTEGER
   63            | INTEGER '{' NamedNumberList '}'

   64 NamedNumberList: NamedNumber
   65                | NamedNumberList ',' NamedNumber

   66 NamedNumber: identifier '(' NamedNumberNumber ')'

   67 NamedNumberNumber: DefinedValue
   68                  | SignedNumber

   69 SignedNumber: "positive integer"
   70             | "negative integer"

   71 EnumeratedType: ENUMERATED '{' Enumerations '}'

   72 Enumerations: RootEnumeration
   73             | RootEnumeration ',' "..." ExceptionSpec
   74             | RootEnumeration ',' "..." ExceptionSpec ',' AdditionalEnumeration

   75 RootEnumeration: Enumeration

   76 AdditionalEnumeration: Enumeration

   77 Enumeration: EnumerationItem
   78            | Enumeration ',' EnumerationItem

   79 EnumerationItem: identifier
   80                | NamedNumber

   81 RealType: REAL

   82 BitStringType: BIT STRING
   83              | BIT STRING '{' NamedNumberList '}'

   84 OctetStringType: OCTET STRING

   85 NullType: NULL

   86 SequenceType: SEQUENCE '{' '}'
   87             | SEQUENCE '{' "..." ExceptionSpec OptionalExtensionMarker '}'
   88             | SEQUENCE '{' ComponentTypeLists '}'

   89 OptionalExtensionMarker: ',' "..."
   90                        | empty

   91 ComponentTypeLists: RootComponentTypeList
   92                   | RootComponentTypeList ',' "..." ExceptionSpec ExtensionAdditions OptionalExtensionMarker
   93                   | RootComponentTypeList ',' "..." ExceptionSpec ExtensionAdditions ExtensionEndMarker ',' RootComponentTypeList
   94                   | "..." ExceptionSpec ExtensionAdditions ExtensionEndMarker ',' RootComponentTypeList
   95                   | "..." ExceptionSpec ExtensionAdditions OptionalExtensionMarker

   96 RootComponentTypeList: ComponentTypeList

   97 ExtensionEndMarker: ',' "..."

   98 ExtensionAdditions: ',' ExtensionAdditionList
   99                   | empty

  100 ExtensionAdditionList: ExtensionAddition
  101                      | ExtensionAdditionList ',' ExtensionAddition

  102 ExtensionAddition: ComponentType
  103                  | ExtensionAdditionGroup

  104 ExtensionAdditionGroup: "[[" VersionNumber ComponentTypeList "]]"

  105 VersionNumber: empty
  106              | number ':'

  107 ComponentTypeList: ComponentType
  108                  | ComponentTypeList ',' ComponentType

  109 ComponentType: NamedType
  110              | NamedType OPTIONAL
  111              | NamedType DEFAULT Value
  112              | COMPONENTS OF Type

  113 NamedType: identifier optTypePrefix Type

  114 SequenceOfType: SEQUENCE SequenceOfTypeVariant SequenceOfTypeTarget

  115 SequenceOfTypeVariant: OF
  116                      | Constraint OF
  117                      | SizeConstraint OF

  118 SequenceOfTypeTarget: Type
  119                     | NamedType

  120 ChoiceType: CHOICE '{' AlternativeTypeLists '}'

  121 AlternativeTypeLists: RootAlternativeTypeList
  122                     | RootAlternativeTypeList ',' "..." ExceptionSpec ExtensionAdditionAlternatives OptionalExtensionMarker

  123 RootAlternativeTypeList: AlternativeTypeList

  124 ExtensionAdditionAlternatives: ',' ExtensionAdditionAlternativesList
  125                              | empty

  126 ExtensionAdditionAlternativesList: ExtensionAdditionAlternative
  127                                  | ExtensionAdditionAlternativesList ',' ExtensionAdditionAlternative

  128 ExtensionAdditionAlternative: ExtensionAdditionAlternativesGroup
  129                             | NamedType

  130 ExtensionAdditionAlternativesGroup: "[[" VersionNumber AlternativeTypeList "]]"

  131 AlternativeTypeList: NamedType
  132                    | AlternativeTypeList ',' NamedType

  133 optTypePrefix: empty
  134              | TypePrefix

  135 TypePrefix: Tag
  136           | Tag IMPLICIT
  137           | Tag EXPLICIT

  138 Tag: '[' encodingreference ':' Class ']'
  139    | '[' Class ']'

  140 Class: UNIVERSAL ClassNumber
  141      | APPLICATION ClassNumber
  142      | PRIVATE ClassNumber
  143      | ClassNumber

  144 ClassNumber: number
  145            | DefinedValue

  146 Constraint: '(' ConstraintSpec ExceptionSpec ')'

  147 ConstraintSpec: SubtypeConstraint

  148 SubtypeConstraint: ElementSetSpecs

  149 ElementSetSpecs: ElementSetSpec
  150                | ElementSetSpec ',' "..."
  151                | ElementSetSpec ',' "..." ',' ElementSetSpec

  152 ElementSetSpec: ALL EXCEPT Elements
  153               | Elements NextElements

  154 NextElements: UnionMark Elements NextElements
  155             | IntersectionMark Elements NextElements
  156             | empty

  157 IntersectionMark: INTERSECTION
  158                 | '^'

  159 UnionMark: UNION
  160          | '|'

  161 Elements: '(' ElementSetSpec ')'
  162         | SubTypeElements

  163 SubTypeElements: SingleValue
  164                | ValueRange
  165                | SizeConstraint

  166 SingleValue: Value

  167 ValueRange: LowerEndpoint ".." UpperEndpoint

  168 LowerEndpoint: LowerEndValue
  169              | LowerEndValue '<'

  170 UpperEndpoint: UpperEndValue
  171              | '<' UpperEndValue

  172 LowerEndValue: Value
  173              | MIN

  174 UpperEndValue: Value
  175              | MAX

  176 SizeConstraint: SIZE Constraint

  177 ExceptionSpec: '!' ExceptionIdentification
  178              | empty

  179 ExceptionIdentification: Type ':' Value
  180                        | DefinedValue
  181                        | SignedNumber


Terminals, with rules where they appear

$end (0) 0
'!' (33) 177
'(' (40) 66 146 161
')' (41) 66 146 161
',' (44) 65 73 74 78 89 92 93 94 97 98 101 108 122 124 127 132 150
    151
':' (58) 106 138 179
'<' (60) 169 171
'[' (91) 138 139
']' (93) 138 139
'^' (94) 158
'{' (123) 63 71 83 86 87 88 120
'|' (124) 160
'}' (125) 63 71 83 86 87 88 120
error (256)
EXCEPT (258) 152
CARET (259)
INTERSECTION (260) 157
PIPE (261)
UNION (262) 159
ENDL (263)
"[[" (264) 104 130
"::=" (265) 14 15
".." (266) 167
"..." (267) 73 74 87 89 92 93 94 95 97 122 150 151
EXCLAIM (268)
OCTET (269) 84
CHARACTER (270) 46
BIT (271) 82 83
STRING (272) 46 82 83 84
SIZE (273) 176
CHOICE (274) 120
SEQUENCE (275) 86 87 88 114
SET (276)
OF (277) 112 115 116 117
ALL (278) 152
MIN (279) 173
MAX (280) 175
COMPONENTS (281) 112
COMPONENT (282)
ABSENT (283)
CONTAINING (284)
FROM (285)
INCLUDES (286)
SETTINGS (287)
PRESENT (288)
PATTERN (289)
WITH (290)
OPTIONAL (291) 110
DEFAULT (292) 111
IMPLICIT (293) 136
EXPLICIT (294) 137
APPLICATION (295) 141
PRIVATE (296) 142
UNIVERSAL (297) 140
CHAR (298)
BOOLEAN (299) 61
INTEGER (300) 62 63
REAL (301) 81
ENUMERATED (302) 71
BMPString (303) 47
GeneralString (304) 48
GraphicString (305) 49
IA5String (306) 50
ISO646String (307) 51
NumericString (308) 52
PrintableString (309) 53
TeletexString (310) 54
T61String (311) 55
UniversalString (312) 56
UTF8String (313) 57
VideotexString (314) 58
VisibleString (315) 59
DATE (316)
DATE_TIME (317)
DURATION (318)
EMBEDDED (319)
PDV (320)
EXTERNAL (321)
RELATIVE_OID_IRI (322)
OBJECT (323)
IDENTIFIER (324)
RELATIVE_IRI (325)
RELATIVE_OID (326)
TIME (327)
TIME_OF_DAY (328)
"positive integer" (329) 7 21 69
"negative integer" (330) 8 22 70
HEXINT (331) 23
"identifier" (332) 4
"]]" (333) 104 130
PLUS_INFINITY (334) 26
MINUS_INFINITY (335) 27
NOT_A_NUMBER (336) 28
TRUE (337) 18
FALSE (338) 19
NULL (339) 20 85
CONTAINS (340)
"positive real number" (341) 24
"negative real number" (342) 25
"hstring" (343)
"bstring" (344)
"cstring" (345)
DEFINITIONS (346)
BEGIN (347)
END (348)
TAGS (349)
INSTRUCTIONS (350)
EXPORTS (351)
IMPORTS (352)
EXTENSIBILITY (353)
IMPLIED (354)
AUTOMATIC (355)
"typereference" (356) 5


Nonterminals, with rules where they appear

$accept (114)
    on left: 0
Top (115)
    on left: 2, on right: 0
$@1 (116)
    on left: 1, on right: 2
empty (117)
    on left: 3, on right: 90 99 105 125 133 156 178
identifier (118)
    on left: 4, on right: 6 9 66 79 113
typereference (119)
    on left: 5, on right: 14 60
valuereference (120)
    on left: 6, on right: 15 29
number (121)
    on left: 7 8, on right: 106 144
encodingreference (122)
    on left: 9, on right: 138
AssignmentList (123)
    on left: 10 11, on right: 2 10
Assignment (124)
    on left: 12 13, on right: 10 11
TypeAssignment (125)
    on left: 14, on right: 12
ValueAssignment (126)
    on left: 15, on right: 13
Value (127)
    on left: 16 17, on right: 15 111 166 172 174 179
BuiltinValue (128)
    on left: 18 19 20 21 22 23 24 25 26 27 28, on right: 16
DefinedValue (129)
    on left: 29, on right: 17 67 145 180
Type (130)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42, on right: 14 15
    43 112 113 118 179
ConstrainedType (131)
    on left: 43, on right: 42
CharacterStringType (132)
    on left: 44 45, on right: 32
UnrestrictedCharacterStringType (133)
    on left: 46, on right: 45
RestrictedCharacterStringType (134)
    on left: 47 48 49 50 51 52 53 54 55 56 57 58 59, on right: 44
DefinedType (135)
    on left: 60, on right: 41
BooleanType (136)
    on left: 61, on right: 31
IntegerType (137)
    on left: 62 63, on right: 35
NamedNumberList (138)
    on left: 64 65, on right: 63 65 83
NamedNumber (139)
    on left: 66, on right: 64 65 80
NamedNumberNumber (140)
    on left: 67 68, on right: 66
SignedNumber (141)
    on left: 69 70, on right: 68 181
EnumeratedType (142)
    on left: 71, on right: 34
Enumerations (143)
    on left: 72 73 74, on right: 71
RootEnumeration (144)
    on left: 75, on right: 72 73 74
AdditionalEnumeration (145)
    on left: 76, on right: 74
Enumeration (146)
    on left: 77 78, on right: 75 76 78
EnumerationItem (147)
    on left: 79 80, on right: 77 78
RealType (148)
    on left: 81, on right: 38
BitStringType (149)
    on left: 82 83, on right: 30
OctetStringType (150)
    on left: 84, on right: 37
NullType (151)
    on left: 85, on right: 36
SequenceType (152)
    on left: 86 87 88, on right: 40
OptionalExtensionMarker (153)
    on left: 89 90, on right: 87 92 95 122
ComponentTypeLists (154)
    on left: 91 92 93 94 95, on right: 88
RootComponentTypeList (155)
    on left: 96, on right: 91 92 93 94
ExtensionEndMarker (156)
    on left: 97, on right: 93 94
ExtensionAdditions (157)
    on left: 98 99, on right: 92 93 94 95
ExtensionAdditionList (158)
    on left: 100 101, on right: 98 101
ExtensionAddition (159)
    on left: 102 103, on right: 100 101
ExtensionAdditionGroup (160)
    on left: 104, on right: 103
VersionNumber (161)
    on left: 105 106, on right: 104 130
ComponentTypeList (162)
    on left: 107 108, on right: 96 104 108
ComponentType (163)
    on left: 109 110 111 112, on right: 102 107 108
NamedType (164)
    on left: 113, on right: 109 110 111 119 129 131 132
SequenceOfType (165)
    on left: 114, on right: 39
SequenceOfTypeVariant (166)
    on left: 115 116 117, on right: 114
SequenceOfTypeTarget (167)
    on left: 118 119, on right: 114
ChoiceType (168)
    on left: 120, on right: 33
AlternativeTypeLists (169)
    on left: 121 122, on right: 120
RootAlternativeTypeList (170)
    on left: 123, on right: 121 122
ExtensionAdditionAlternatives (171)
    on left: 124 125, on right: 122
ExtensionAdditionAlternativesList (172)
    on left: 126 127, on right: 124 127
ExtensionAdditionAlternative (173)
    on left: 128 129, on right: 126 127
ExtensionAdditionAlternativesGroup (174)
    on left: 130, on right: 128
AlternativeTypeList (175)
    on left: 131 132, on right: 123 130 132
optTypePrefix (176)
    on left: 133 134, on right: 14 113
TypePrefix (177)
    on left: 135 136 137, on right: 134
Tag (178)
    on left: 138 139, on right: 135 136 137
Class (179)
    on left: 140 141 142 143, on right: 138 139
ClassNumber (180)
    on left: 144 145, on right: 140 141 142 143
Constraint (181)
    on left: 146, on right: 43 116 176
ConstraintSpec (182)
    on left: 147, on right: 146
SubtypeConstraint (183)
    on left: 148, on right: 147
ElementSetSpecs (184)
    on left: 149 150 151, on right: 148
ElementSetSpec (185)
    on left: 152 153, on right: 149 150 151 161
NextElements (186)
    on left: 154 155 156, on right: 153 154 155
IntersectionMark (187)
    on left: 157 158, on right: 155
UnionMark (188)
    on left: 159 160, on right: 154
Elements (189)
    on left: 161 162, on right: 152 153 154 155
SubTypeElements (190)
    on left: 163 164 165, on right: 162
SingleValue (191)
    on left: 166, on right: 163
ValueRange (192)
    on left: 167, on right: 164
LowerEndpoint (193)
    on left: 168 169, on right: 167
UpperEndpoint (194)
    on left: 170 171, on right: 167
LowerEndValue (195)
    on left: 172 173, on right: 168 169
UpperEndValue (196)
    on left: 174 175, on right: 170 171
SizeConstraint (197)
    on left: 176, on right: 117 165
ExceptionSpec (198)
    on left: 177 178, on right: 73 74 87 92 93 94 95 122 146
ExceptionIdentification (199)
    on left: 179 180 181, on right: 177


State 0

    0 $accept: . Top $end
    1 $@1: . %empty
    2 Top: . $@1 AssignmentList

    $default  reduce using rule 1 ($@1)

    Top  go to state 1
    $@1  go to state 2


State 1

    0 $accept: Top . $end

    $end  shift, and go to state 3


State 2

    2 Top: $@1 . AssignmentList
    4 identifier: . "identifier"
    5 typereference: . "typereference"
    6 valuereference: . identifier
   10 AssignmentList: . AssignmentList Assignment
   11               | . Assignment
   12 Assignment: . TypeAssignment
   13           | . ValueAssignment
   14 TypeAssignment: . typereference "::=" optTypePrefix Type
   15 ValueAssignment: . valuereference Type "::=" Value

    "identifier"     shift, and go to state 4
    "typereference"  shift, and go to state 5

    identifier       go to state 6
    typereference    go to state 7
    valuereference   go to state 8
    AssignmentList   go to state 9
    Assignment       go to state 10
    TypeAssignment   go to state 11
    ValueAssignment  go to state 12


State 3

    0 $accept: Top $end .

    $default  accept


State 4

    4 identifier: "identifier" .

    $default  reduce using rule 4 (identifier)


State 5

    5 typereference: "typereference" .

    $default  reduce using rule 5 (typereference)


State 6

    6 valuereference: identifier .

    $default  reduce using rule 6 (valuereference)


State 7

   14 TypeAssignment: typereference . "::=" optTypePrefix Type

    "::="  shift, and go to state 13


State 8

    5 typereference: . "typereference"
   15 ValueAssignment: valuereference . Type "::=" Value
   30 Type: . BitStringType
   31     | . BooleanType
   32     | . CharacterStringType
   33     | . ChoiceType
   34     | . EnumeratedType
   35     | . IntegerType
   36     | . NullType
   37     | . OctetStringType
   38     | . RealType
   39     | . SequenceOfType
   40     | . SequenceType
   41     | . DefinedType
   42     | . ConstrainedType
   43 ConstrainedType: . Type Constraint
   44 CharacterStringType: . RestrictedCharacterStringType
   45                    | . UnrestrictedCharacterStringType
   46 UnrestrictedCharacterStringType: . CHARACTER STRING
   47 RestrictedCharacterStringType: . BMPString
   48                              | . GeneralString
   49                              | . GraphicString
   50                              | . IA5String
   51                              | . ISO646String
   52                              | . NumericString
   53                              | . PrintableString
   54                              | . TeletexString
   55                              | . T61String
   56                              | . UniversalString
   57                              | . UTF8String
   58                              | . VideotexString
   59                              | . VisibleString
   60 DefinedType: . typereference
   61 BooleanType: . BOOLEAN
   62 IntegerType: . INTEGER
   63            | . INTEGER '{' NamedNumberList '}'
   71 EnumeratedType: . ENUMERATED '{' Enumerations '}'
   81 RealType: . REAL
   82 BitStringType: . BIT STRING
   83              | . BIT STRING '{' NamedNumberList '}'
   84 OctetStringType: . OCTET STRING
   85 NullType: . NULL
   86 SequenceType: . SEQUENCE '{' '}'
   87             | . SEQUENCE '{' "..." ExceptionSpec OptionalExtensionMarker '}'
   88             | . SEQUENCE '{' ComponentTypeLists '}'
  114 SequenceOfType: . SEQUENCE SequenceOfTypeVariant SequenceOfTypeTarget
  120 ChoiceType: . CHOICE '{' AlternativeTypeLists '}'

    OCTET            shift, and go to state 14
    CHARACTER        shift, and go to state 15
    BIT              shift, and go to state 16
    CHOICE           shift, and go to state 17
    SEQUENCE         shift, and go to state 18
    BOOLEAN          shift, and go to state 19
    INTEGER          shift, and go to state 20
    REAL             shift, and go to state 21
    ENUMERATED       shift, and go to state 22
    BMPString        shift, and go to state 23
    GeneralString    shift, and go to state 24
    GraphicString    shift, and go to state 25
    IA5String        shift, and go to state 26
    ISO646String     shift, and go to state 27
    NumericString    shift, and go to state 28
    PrintableString  shift, and go to state 29
    TeletexString    shift, and go to state 30
    T61String        shift, and go to state 31
    UniversalString  shift, and go to state 32
    UTF8String       shift, and go to state 33
    VideotexString   shift, and go to state 34
    VisibleString    shift, and go to state 35
    NULL             shift, and go to state 36
    "typereference"  shift, and go to state 5

    typereference                    go to state 37
    Type                             go to state 38
    ConstrainedType                  go to state 39
    CharacterStringType              go to state 40
    UnrestrictedCharacterStringType  go to state 41
    RestrictedCharacterStringType    go to state 42
    DefinedType                      go to state 43
    BooleanType                      go to state 44
    IntegerType                      go to state 45
    EnumeratedType                   go to state 46
    RealType                         go to state 47
    BitStringType                    go to state 48
    OctetStringType                  go to state 49
    NullType                         go to state 50
    SequenceType                     go to state 51
    SequenceOfType                   go to state 52
    ChoiceType                       go to state 53


State 9

    2 Top: $@1 AssignmentList .  [$end]
    4 identifier: . "identifier"
    5 typereference: . "typereference"
    6 valuereference: . identifier
   10 AssignmentList: AssignmentList . Assignment
   12 Assignment: . TypeAssignment
   13           | . ValueAssignment
   14 TypeAssignment: . typereference "::=" optTypePrefix Type
   15 ValueAssignment: . valuereference Type "::=" Value

    "identifier"     shift, and go to state 4
    "typereference"  shift, and go to state 5

    $default  reduce using rule 2 (Top)

    identifier       go to state 6
    typereference    go to state 7
    valuereference   go to state 8
    Assignment       go to state 54
    TypeAssignment   go to state 11
    ValueAssignment  go to state 12


State 10

   11 AssignmentList: Assignment .

    $default  reduce using rule 11 (AssignmentList)


State 11

   12 Assignment: TypeAssignment .

    $default  reduce using rule 12 (Assignment)


State 12

   13 Assignment: ValueAssignment .

    $default  reduce using rule 13 (Assignment)


State 13

    3 empty: . %empty  [OCTET, CHARACTER, BIT, CHOICE, SEQUENCE, BOOLEAN, INTEGER, REAL, ENUMERATED, BMPString, GeneralString, GraphicString, IA5String, ISO646String, NumericString, PrintableString, TeletexString, T61String, UniversalString, UTF8String, VideotexString, VisibleString, NULL, "typereference"]
   14 TypeAssignment: typereference "::=" . optTypePrefix Type
  133 optTypePrefix: . empty
  134              | . TypePrefix
  135 TypePrefix: . Tag
  136           | . Tag IMPLICIT
  137           | . Tag EXPLICIT
  138 Tag: . '[' encodingreference ':' Class ']'
  139    | . '[' Class ']'

    '['  shift, and go to state 55

    $default  reduce using rule 3 (empty)

    empty          go to state 56
    optTypePrefix  go to state 57
    TypePrefix     go to state 58
    Tag            go to state 59


State 14

   84 OctetStringType: OCTET . STRING

    STRING  shift, and go to state 60


State 15

   46 UnrestrictedCharacterStringType: CHARACTER . STRING

    STRING  shift, and go to state 61


State 16

   82 BitStringType: BIT . STRING
   83              | BIT . STRING '{' NamedNumberList '}'

    STRING  shift, and go to state 62


State 17

  120 ChoiceType: CHOICE . '{' AlternativeTypeLists '}'

    '{'  shift, and go to state 63


State 18

   86 SequenceType: SEQUENCE . '{' '}'
   87             | SEQUENCE . '{' "..." ExceptionSpec OptionalExtensionMarker '}'
   88             | SEQUENCE . '{' ComponentTypeLists '}'
  114 SequenceOfType: SEQUENCE . SequenceOfTypeVariant SequenceOfTypeTarget
  115 SequenceOfTypeVariant: . OF
  116                      | . Constraint OF
  117                      | . SizeConstraint OF
  146 Constraint: . '(' ConstraintSpec ExceptionSpec ')'
  176 SizeConstraint: . SIZE Constraint

    SIZE  shift, and go to state 64
    OF    shift, and go to state 65
    '{'   shift, and go to state 66
    '('   shift, and go to state 67

    SequenceOfTypeVariant  go to state 68
    Constraint             go to state 69
    SizeConstraint         go to state 70


State 19

   61 BooleanType: BOOLEAN .

    $default  reduce using rule 61 (BooleanType)


State 20

   62 IntegerType: INTEGER .  [$end, "::=", OPTIONAL, DEFAULT, "identifier", "]]", "typereference", '}', ',', '(', ':']
   63            | INTEGER . '{' NamedNumberList '}'

    '{'  shift, and go to state 71

    $default  reduce using rule 62 (IntegerType)


State 21

   81 RealType: REAL .

    $default  reduce using rule 81 (RealType)


State 22

   71 EnumeratedType: ENUMERATED . '{' Enumerations '}'

    '{'  shift, and go to state 72


State 23

   47 RestrictedCharacterStringType: BMPString .

    $default  reduce using rule 47 (RestrictedCharacterStringType)


State 24

   48 RestrictedCharacterStringType: GeneralString .

    $default  reduce using rule 48 (RestrictedCharacterStringType)


State 25

   49 RestrictedCharacterStringType: GraphicString .

    $default  reduce using rule 49 (RestrictedCharacterStringType)


State 26

   50 RestrictedCharacterStringType: IA5String .

    $default  reduce using rule 50 (RestrictedCharacterStringType)


State 27

   51 RestrictedCharacterStringType: ISO646String .

    $default  reduce using rule 51 (RestrictedCharacterStringType)


State 28

   52 RestrictedCharacterStringType: NumericString .

    $default  reduce using rule 52 (RestrictedCharacterStringType)


State 29

   53 RestrictedCharacterStringType: PrintableString .

    $default  reduce using rule 53 (RestrictedCharacterStringType)


State 30

   54 RestrictedCharacterStringType: TeletexString .

    $default  reduce using rule 54 (RestrictedCharacterStringType)


State 31

   55 RestrictedCharacterStringType: T61String .

    $default  reduce using rule 55 (RestrictedCharacterStringType)


State 32

   56 RestrictedCharacterStringType: UniversalString .

    $default  reduce using rule 56 (RestrictedCharacterStringType)


State 33

   57 RestrictedCharacterStringType: UTF8String .

    $default  reduce using rule 57 (RestrictedCharacterStringType)


State 34

   58 RestrictedCharacterStringType: VideotexString .

    $default  reduce using rule 58 (RestrictedCharacterStringType)


State 35

   59 RestrictedCharacterStringType: VisibleString .

    $default  reduce using rule 59 (RestrictedCharacterStringType)


State 36

   85 NullType: NULL .

    $default  reduce using rule 85 (NullType)


State 37

   60 DefinedType: typereference .

    $default  reduce using rule 60 (DefinedType)


State 38

   15 ValueAssignment: valuereference Type . "::=" Value
   43 ConstrainedType: Type . Constraint
  146 Constraint: . '(' ConstraintSpec ExceptionSpec ')'

    "::="  shift, and go to state 73
    '('    shift, and go to state 67

    Constraint  go to state 74


State 39

   42 Type: ConstrainedType .

    $default  reduce using rule 42 (Type)


State 40

   32 Type: CharacterStringType .

    $default  reduce using rule 32 (Type)


State 41

   45 CharacterStringType: UnrestrictedCharacterStringType .

    $default  reduce using rule 45 (CharacterStringType)


State 42

   44 CharacterStringType: RestrictedCharacterStringType .

    $default  reduce using rule 44 (CharacterStringType)


State 43

   41 Type: DefinedType .

    $default  reduce using rule 41 (Type)


State 44

   31 Type: BooleanType .

    $default  reduce using rule 31 (Type)


State 45

   35 Type: IntegerType .

    $default  reduce using rule 35 (Type)


State 46

   34 Type: EnumeratedType .

    $default  reduce using rule 34 (Type)


State 47

   38 Type: RealType .

    $default  reduce using rule 38 (Type)


State 48

   30 Type: BitStringType .

    $default  reduce using rule 30 (Type)


State 49

   37 Type: OctetStringType .

    $default  reduce using rule 37 (Type)


State 50

   36 Type: NullType .

    $default  reduce using rule 36 (Type)


State 51

   40 Type: SequenceType .

    $default  reduce using rule 40 (Type)


State 52

   39 Type: SequenceOfType .

    $default  reduce using rule 39 (Type)


State 53

   33 Type: ChoiceType .

    $default  reduce using rule 33 (Type)


State 54

   10 AssignmentList: AssignmentList Assignment .

    $default  reduce using rule 10 (AssignmentList)


State 55

    4 identifier: . "identifier"
    6 valuereference: . identifier
    7 number: . "positive integer"
    8       | . "negative integer"
    9 encodingreference: . identifier
   29 DefinedValue: . valuereference
  138 Tag: '[' . encodingreference ':' Class ']'
  139    | '[' . Class ']'
  140 Class: . UNIVERSAL ClassNumber
  141      | . APPLICATION ClassNumber
  142      | . PRIVATE ClassNumber
  143      | . ClassNumber
  144 ClassNumber: . number
  145            | . DefinedValue

    APPLICATION         shift, and go to state 75
    PRIVATE             shift, and go to state 76
    UNIVERSAL           shift, and go to state 77
    "positive integer"  shift, and go to state 78
    "negative integer"  shift, and go to state 79
    "identifier"        shift, and go to state 4

    identifier         go to state 80
    valuereference     go to state 81
    number             go to state 82
    encodingreference  go to state 83
    DefinedValue       go to state 84
    Class              go to state 85
    ClassNumber        go to state 86


State 56

  133 optTypePrefix: empty .

    $default  reduce using rule 133 (optTypePrefix)


State 57

    5 typereference: . "typereference"
   14 TypeAssignment: typereference "::=" optTypePrefix . Type
   30 Type: . BitStringType
   31     | . BooleanType
   32     | . CharacterStringType
   33     | . ChoiceType
   34     | . EnumeratedType
   35     | . IntegerType
   36     | . NullType
   37     | . OctetStringType
   38     | . RealType
   39     | . SequenceOfType
   40     | . SequenceType
   41     | . DefinedType
   42     | . ConstrainedType
   43 ConstrainedType: . Type Constraint
   44 CharacterStringType: . RestrictedCharacterStringType
   45                    | . UnrestrictedCharacterStringType
   46 UnrestrictedCharacterStringType: . CHARACTER STRING
   47 RestrictedCharacterStringType: . BMPString
   48                              | . GeneralString
   49                              | . GraphicString
   50                              | . IA5String
   51                              | . ISO646String
   52                              | . NumericString
   53                              | . PrintableString
   54                              | . TeletexString
   55                              | . T61String
   56                              | . UniversalString
   57                              | . UTF8String
   58                              | . VideotexString
   59                              | . VisibleString
   60 DefinedType: . typereference
   61 BooleanType: . BOOLEAN
   62 IntegerType: . INTEGER
   63            | . INTEGER '{' NamedNumberList '}'
   71 EnumeratedType: . ENUMERATED '{' Enumerations '}'
   81 RealType: . REAL
   82 BitStringType: . BIT STRING
   83              | . BIT STRING '{' NamedNumberList '}'
   84 OctetStringType: . OCTET STRING
   85 NullType: . NULL
   86 SequenceType: . SEQUENCE '{' '}'
   87             | . SEQUENCE '{' "..." ExceptionSpec OptionalExtensionMarker '}'
   88             | . SEQUENCE '{' ComponentTypeLists '}'
  114 SequenceOfType: . SEQUENCE SequenceOfTypeVariant SequenceOfTypeTarget
  120 ChoiceType: . CHOICE '{' AlternativeTypeLists '}'

    OCTET            shift, and go to state 14
    CHARACTER        shift, and go to state 15
    BIT              shift, and go to state 16
    CHOICE           shift, and go to state 17
    SEQUENCE         shift, and go to state 18
    BOOLEAN          shift, and go to state 19
    INTEGER          shift, and go to state 20
    REAL             shift, and go to state 21
    ENUMERATED       shift, and go to state 22
    BMPString        shift, and go to state 23
    GeneralString    shift, and go to state 24
    GraphicString    shift, and go to state 25
    IA5String        shift, and go to state 26
    ISO646String     shift, and go to state 27
    NumericString    shift, and go to state 28
    PrintableString  shift, and go to state 29
    TeletexString    shift, and go to state 30
    T61String        shift, and go to state 31
    UniversalString  shift, and go to state 32
    UTF8String       shift, and go to state 33
    VideotexString   shift, and go to state 34
    VisibleString    shift, and go to state 35
    NULL             shift, and go to state 36
    "typereference"  shift, and go to state 5

    typereference                    go to state 37
    Type                             go to state 87
    ConstrainedType                  go to state 39
    CharacterStringType              go to state 40
    UnrestrictedCharacterStringType  go to state 41
    RestrictedCharacterStringType    go to state 42
    DefinedType                      go to state 43
    BooleanType                      go to state 44
    IntegerType                      go to state 45
    EnumeratedType                   go to state 46
    RealType                         go to state 47
    BitStringType                    go to state 48
    OctetStringType                  go to state 49
    NullType                         go to state 50
    SequenceType                     go to state 51
    SequenceOfType                   go to state 52
    ChoiceType                       go to state 53


State 58

  134 optTypePrefix: TypePrefix .

    $default  reduce using rule 134 (optTypePrefix)


State 59

  135 TypePrefix: Tag .  [OCTET, CHARACTER, BIT, CHOICE, SEQUENCE, BOOLEAN, INTEGER, REAL, ENUMERATED, BMPString, GeneralString, GraphicString, IA5String, ISO646String, NumericString, PrintableString, TeletexString, T61String, UniversalString, UTF8String, VideotexString, VisibleString, NULL, "typereference"]
  136           | Tag . IMPLICIT
  137           | Tag . EXPLICIT

    IMPLICIT  shift, and go to state 88
    EXPLICIT  shift, and go to state 89

    $default  reduce using rule 135 (TypePrefix)


State 60

   84 OctetStringType: OCTET STRING .

    $default  reduce using rule 84 (OctetStringType)


State 61

   46 UnrestrictedCharacterStringType: CHARACTER STRING .

    $default  reduce using rule 46 (UnrestrictedCharacterStringType)


State 62

   82 BitStringType: BIT STRING .  [$end, "::=", OPTIONAL, DEFAULT, "identifier", "]]", "typereference", '}', ',', '(', ':']
   83              | BIT STRING . '{' NamedNumberList '}'

    '{'  shift, and go to state 90

    $default  reduce using rule 82 (BitStringType)


State 63

    4 identifier: . "identifier"
  113 NamedType: . identifier optTypePrefix Type
  120 ChoiceType: CHOICE '{' . AlternativeTypeLists '}'
  121 AlternativeTypeLists: . RootAlternativeTypeList
  122                     | . RootAlternativeTypeList ',' "..." ExceptionSpec ExtensionAdditionAlternatives OptionalExtensionMarker
  123 RootAlternativeTypeList: . AlternativeTypeList
  131 AlternativeTypeList: . NamedType
  132                    | . AlternativeTypeList ',' NamedType

    "identifier"  shift, and go to state 4

    identifier               go to state 91
    NamedType                go to state 92
    AlternativeTypeLists     go to state 93
    RootAlternativeTypeList  go to state 94
    AlternativeTypeList      go to state 95


State 64

  146 Constraint: . '(' ConstraintSpec ExceptionSpec ')'
  176 SizeConstraint: SIZE . Constraint

    '('  shift, and go to state 67

    Constraint  go to state 96


State 65

  115 SequenceOfTypeVariant: OF .

    $default  reduce using rule 115 (SequenceOfTypeVariant)


State 66

    4 identifier: . "identifier"
   86 SequenceType: SEQUENCE '{' . '}'
   87             | SEQUENCE '{' . "..." ExceptionSpec OptionalExtensionMarker '}'
   88             | SEQUENCE '{' . ComponentTypeLists '}'
   91 ComponentTypeLists: . RootComponentTypeList
   92                   | . RootComponentTypeList ',' "..." ExceptionSpec ExtensionAdditions OptionalExtensionMarker
   93                   | . RootComponentTypeList ',' "..." ExceptionSpec ExtensionAdditions ExtensionEndMarker ',' RootComponentTypeList
   94                   | . "..." ExceptionSpec ExtensionAdditions ExtensionEndMarker ',' RootComponentTypeList
   95                   | . "..." ExceptionSpec ExtensionAdditions OptionalExtensionMarker
   96 RootComponentTypeList: . ComponentTypeList
  107 ComponentTypeList: . ComponentType
  108                  | . ComponentTypeList ',' ComponentType
  109 ComponentType: . NamedType
  110              | . NamedType OPTIONAL
  111              | . NamedType DEFAULT Value
  112              | . COMPONENTS OF Type
  113 NamedType: . identifier optTypePrefix Type

    "..."         shift, and go to state 97
    COMPONENTS    shift, and go to state 98
    "identifier"  shift, and go to state 4
    '}'           shift, and go to state 99

    identifier             go to state 91
    ComponentTypeLists     go to state 100
    RootComponentTypeList  go to state 101
    ComponentTypeList      go to state 102
    ComponentType          go to state 103
    NamedType              go to state 104


State 67

    4 identifier: . "identifier"
    6 valuereference: . identifier
   16 Value: . BuiltinValue
   17      | . DefinedValue
   18 BuiltinValue: . TRUE
   19             | . FALSE
   20             | . NULL
   21             | . "positive integer"
   22             | . "negative integer"
   23             | . HEXINT
   24             | . "positive real number"
   25             | . "negative real number"
   26             | . PLUS_INFINITY
   27             | . MINUS_INFINITY
   28             | . NOT_A_NUMBER
   29 DefinedValue: . valuereference
  146 Constraint: '(' . ConstraintSpec ExceptionSpec ')'
  147 ConstraintSpec: . SubtypeConstraint
  148 SubtypeConstraint: . ElementSetSpecs
  149 ElementSetSpecs: . ElementSetSpec
  150                | . ElementSetSpec ',' "..."
  151                | . ElementSetSpec ',' "..." ',' ElementSetSpec
  152 ElementSetSpec: . ALL EXCEPT Elements
  153               | . Elements NextElements
  161 Elements: . '(' ElementSetSpec ')'
  162         | . SubTypeElements
  163 SubTypeElements: . SingleValue
  164                | . ValueRange
  165                | . SizeConstraint
  166 SingleValue: . Value
  167 ValueRange: . LowerEndpoint ".." UpperEndpoint
  168 LowerEndpoint: . LowerEndValue
  169              | . LowerEndValue '<'
  172 LowerEndValue: . Value
  173              | . MIN
  176 SizeConstraint: . SIZE Constraint

    SIZE                    shift, and go to state 64
    ALL                     shift, and go to state 105
    MIN                     shift, and go to state 106
    "positive integer"      shift, and go to state 107
    "negative integer"      shift, and go to state 108
    HEXINT                  shift, and go to state 109
    "identifier"            shift, and go to state 4
    PLUS_INFINITY           shift, and go to state 110
    MINUS_INFINITY          shift, and go to state 111
    NOT_A_NUMBER            shift, and go to state 112
    TRUE                    shift, and go to state 113
    FALSE                   shift, and go to state 114
    NULL                    shift, and go to state 115
    "positive real number"  shift, and go to state 116
    "negative real number"  shift, and go to state 117
    '('                     shift, and go to state 118

    identifier         go to state 6
    valuereference     go to state 81
    Value              go to state 119
    BuiltinValue       go to state 120
    DefinedValue       go to state 121
    ConstraintSpec     go to state 122
    SubtypeConstraint  go to state 123
    ElementSetSpecs    go to state 124
    ElementSetSpec     go to state 125
    Elements           go to state 126
    SubTypeElements    go to state 127
    SingleValue        go to state 128
    ValueRange         go to state 129
    LowerEndpoint      go to state 130
    LowerEndValue      go to state 131
    SizeConstraint     go to state 132


State 68

    4 identifier: . "identifier"
    5 typereference: . "typereference"
   30 Type: . BitStringType
   31     | . BooleanType
   32     | . CharacterStringType
   33     | . ChoiceType
   34     | . EnumeratedType
   35     | . IntegerType
   36     | . NullType
   37     | . OctetStringType
   38     | . RealType
   39     | . SequenceOfType
   40     | . SequenceType
   41     | . DefinedType
   42     | . ConstrainedType
   43 ConstrainedType: . Type Constraint
   44 CharacterStringType: . RestrictedCharacterStringType
   45                    | . UnrestrictedCharacterStringType
   46 UnrestrictedCharacterStringType: . CHARACTER STRING
   47 RestrictedCharacterStringType: . BMPString
   48                              | . GeneralString
   49                              | . GraphicString
   50                              | . IA5String
   51                              | . ISO646String
   52                              | . NumericString
   53                              | . PrintableString
   54                              | . TeletexString
   55                              | . T61String
   56                              | . UniversalString
   57                              | . UTF8String
   58                              | . VideotexString
   59                              | . VisibleString
   60 DefinedType: . typereference
   61 BooleanType: . BOOLEAN
   62 IntegerType: . INTEGER
   63            | . INTEGER '{' NamedNumberList '}'
   71 EnumeratedType: . ENUMERATED '{' Enumerations '}'
   81 RealType: . REAL
   82 BitStringType: . BIT STRING
   83              | . BIT STRING '{' NamedNumberList '}'
   84 OctetStringType: . OCTET STRING
   85 NullType: . NULL
   86 SequenceType: . SEQUENCE '{' '}'
   87             | . SEQUENCE '{' "..." ExceptionSpec OptionalExtensionMarker '}'
   88             | . SEQUENCE '{' ComponentTypeLists '}'
  113 NamedType: . identifier optTypePrefix Type
  114 SequenceOfType: . SEQUENCE SequenceOfTypeVariant SequenceOfTypeTarget
  114               | SEQUENCE SequenceOfTypeVariant . SequenceOfTypeTarget
  118 SequenceOfTypeTarget: . Type
  119                     | . NamedType
  120 ChoiceType: . CHOICE '{' AlternativeTypeLists '}'

    OCTET            shift, and go to state 14
    CHARACTER        shift, and go to state 15
    BIT              shift, and go to state 16
    CHOICE           shift, and go to state 17
    SEQUENCE         shift, and go to state 18
    BOOLEAN          shift, and go to state 19
    INTEGER          shift, and go to state 20
    REAL             shift, and go to state 21
    ENUMERATED       shift, and go to state 22
    BMPString        shift, and go to state 23
    GeneralString    shift, and go to state 24
    GraphicString    shift, and go to state 25
    IA5String        shift, and go to state 26
    ISO646String     shift, and go to state 27
    NumericString    shift, and go to state 28
    PrintableString  shift, and go to state 29
    TeletexString    shift, and go to state 30
    T61String        shift, and go to state 31
    UniversalString  shift, and go to state 32
    UTF8String       shift, and go to state 33
    VideotexString   shift, and go to state 34
    VisibleString    shift, and go to state 35
    "identifier"     shift, and go to state 4
    NULL             shift, and go to state 36
    "typereference"  shift, and go to state 5

    identifier                       go to state 91
    typereference                    go to state 37
    Type                             go to state 133
    ConstrainedType                  go to state 39
    CharacterStringType              go to state 40
    UnrestrictedCharacterStringType  go to state 41
    RestrictedCharacterStringType    go to state 42
    DefinedType                      go to state 43
    BooleanType                      go to state 44
    IntegerType                      go to state 45
    EnumeratedType                   go to state 46
    RealType                         go to state 47
    BitStringType                    go to state 48
    OctetStringType                  go to state 49
    NullType                         go to state 50
    SequenceType                     go to state 51
    NamedType                        go to state 134
    SequenceOfType                   go to state 52
    SequenceOfTypeTarget             go to state 135
    ChoiceType                       go to state 53


State 69

  116 SequenceOfTypeVariant: Constraint . OF

    OF  shift, and go to state 136


State 70

  117 SequenceOfTypeVariant: SizeConstraint . OF

    OF  shift, and go to state 137


State 71

    4 identifier: . "identifier"
   63 IntegerType: INTEGER '{' . NamedNumberList '}'
   64 NamedNumberList: . NamedNumber
   65                | . NamedNumberList ',' NamedNumber
   66 NamedNumber: . identifier '(' NamedNumberNumber ')'

    "identifier"  shift, and go to state 4

    identifier       go to state 138
    NamedNumberList  go to state 139
    NamedNumber      go to state 140


State 72

    4 identifier: . "identifier"
   66 NamedNumber: . identifier '(' NamedNumberNumber ')'
   71 EnumeratedType: ENUMERATED '{' . Enumerations '}'
   72 Enumerations: . RootEnumeration
   73             | . RootEnumeration ',' "..." ExceptionSpec
   74             | . RootEnumeration ',' "..." ExceptionSpec ',' AdditionalEnumeration
   75 RootEnumeration: . Enumeration
   77 Enumeration: . EnumerationItem
   78            | . Enumeration ',' EnumerationItem
   79 EnumerationItem: . identifier
   80                | . NamedNumber

    "identifier"  shift, and go to state 4

    identifier       go to state 141
    NamedNumber      go to state 142
    Enumerations     go to state 143
    RootEnumeration  go to state 144
    Enumeration      go to state 145
    EnumerationItem  go to state 146


State 73

    4 identifier: . "identifier"
    6 valuereference: . identifier
   15 ValueAssignment: valuereference Type "::=" . Value
   16 Value: . BuiltinValue
   17      | . DefinedValue
   18 BuiltinValue: . TRUE
   19             | . FALSE
   20             | . NULL
   21             | . "positive integer"
   22             | . "negative integer"
   23             | . HEXINT
   24             | . "positive real number"
   25             | . "negative real number"
   26             | . PLUS_INFINITY
   27             | . MINUS_INFINITY
   28             | . NOT_A_NUMBER
   29 DefinedValue: . valuereference

    "positive integer"      shift, and go to state 107
    "negative integer"      shift, and go to state 108
    HEXINT                  shift, and go to state 109
    "identifier"            shift, and go to state 4
    PLUS_INFINITY           shift, and go to state 110
    MINUS_INFINITY          shift, and go to state 111
    NOT_A_NUMBER            shift, and go to state 112
    TRUE                    shift, and go to state 113
    FALSE                   shift, and go to state 114
    NULL                    shift, and go to state 115
    "positive real number"  shift, and go to state 116
    "negative real number"  shift, and go to state 117

    identifier      go to state 6
    valuereference  go to state 81
    Value           go to state 147
    BuiltinValue    go to state 120
    DefinedValue    go to state 121


State 74

   43 ConstrainedType: Type Constraint .

    $default  reduce using rule 43 (ConstrainedType)


State 75

    4 identifier: . "identifier"
    6 valuereference: . identifier
    7 number: . "positive integer"
    8       | . "negative integer"
   29 DefinedValue: . valuereference
  141 Class: APPLICATION . ClassNumber
  144 ClassNumber: . number
  145            | . DefinedValue

    "positive integer"  shift, and go to state 78
    "negative integer"  shift, and go to state 79
    "identifier"        shift, and go to state 4

    identifier      go to state 6
    valuereference  go to state 81
    number          go to state 82
    DefinedValue    go to state 84
    ClassNumber     go to state 148


State 76

    4 identifier: . "identifier"
    6 valuereference: . identifier
    7 number: . "positive integer"
    8       | . "negative integer"
   29 DefinedValue: . valuereference
  142 Class: PRIVATE . ClassNumber
  144 ClassNumber: . number
  145            | . DefinedValue

    "positive integer"  shift, and go to state 78
    "negative integer"  shift, and go to state 79
    "identifier"        shift, and go to state 4

    identifier      go to state 6
    valuereference  go to state 81
    number          go to state 82
    DefinedValue    go to state 84
    ClassNumber     go to state 149


State 77

    4 identifier: . "identifier"
    6 valuereference: . identifier
    7 number: . "positive integer"
    8       | . "negative integer"
   29 DefinedValue: . valuereference
  140 Class: UNIVERSAL . ClassNumber
  144 ClassNumber: . number
  145            | . DefinedValue

    "positive integer"  shift, and go to state 78
    "negative integer"  shift, and go to state 79
    "identifier"        shift, and go to state 4

    identifier      go to state 6
    valuereference  go to state 81
    number          go to state 82
    DefinedValue    go to state 84
    ClassNumber     go to state 150


State 78

    7 number: "positive integer" .

    $default  reduce using rule 7 (number)


State 79

    8 number: "negative integer" .

    $default  reduce using rule 8 (number)


State 80

    6 valuereference: identifier .  [']']
    9 encodingreference: identifier .  [':']

    ':'       reduce using rule 9 (encodingreference)
    $default  reduce using rule 6 (valuereference)


State 81

   29 DefinedValue: valuereference .

    $default  reduce using rule 29 (DefinedValue)


State 82

  144 ClassNumber: number .

    $default  reduce using rule 144 (ClassNumber)


State 83

  138 Tag: '[' encodingreference . ':' Class ']'

    ':'  shift, and go to state 151


State 84

  145 ClassNumber: DefinedValue .

    $default  reduce using rule 145 (ClassNumber)


State 85

  139 Tag: '[' Class . ']'

    ']'  shift, and go to state 152


State 86

  143 Class: ClassNumber .

    $default  reduce using rule 143 (Class)


State 87

   14 TypeAssignment: typereference "::=" optTypePrefix Type .  [$end, "identifier", "typereference"]
   43 ConstrainedType: Type . Constraint
  146 Constraint: . '(' ConstraintSpec ExceptionSpec ')'

    '('  shift, and go to state 67

    $default  reduce using rule 14 (TypeAssignment)

    Constraint  go to state 74


State 88

  136 TypePrefix: Tag IMPLICIT .

    $default  reduce using rule 136 (TypePrefix)


State 89

  137 TypePrefix: Tag EXPLICIT .

    $default  reduce using rule 137 (TypePrefix)


State 90

    4 identifier: . "identifier"
   64 NamedNumberList: . NamedNumber
   65                | . NamedNumberList ',' NamedNumber
   66 NamedNumber: . identifier '(' NamedNumberNumber ')'
   83 BitStringType: BIT STRING '{' . NamedNumberList '}'

    "identifier"  shift, and go to state 4

    identifier       go to state 138
    NamedNumberList  go to state 153
    NamedNumber      go to state 140


State 91

    3 empty: . %empty  [OCTET, CHARACTER, BIT, CHOICE, SEQUENCE, BOOLEAN, INTEGER, REAL, ENUMERATED, BMPString, GeneralString, GraphicString, IA5String, ISO646String, NumericString, PrintableString, TeletexString, T61String, UniversalString, UTF8String, VideotexString, VisibleString, NULL, "typereference"]
  113 NamedType: identifier . optTypePrefix Type
  133 optTypePrefix: . empty
  134              | . TypePrefix
  135 TypePrefix: . Tag
  136           | . Tag IMPLICIT
  137           | . Tag EXPLICIT
  138 Tag: . '[' encodingreference ':' Class ']'
  139    | . '[' Class ']'

    '['  shift, and go to state 55

    $default  reduce using rule 3 (empty)

    empty          go to state 56
    optTypePrefix  go to state 154
    TypePrefix     go to state 58
    Tag            go to state 59


State 92

  131 AlternativeTypeList: NamedType .

    $default  reduce using rule 131 (AlternativeTypeList)


State 93

  120 ChoiceType: CHOICE '{' AlternativeTypeLists . '}'

    '}'  shift, and go to state 155


State 94

  121 AlternativeTypeLists: RootAlternativeTypeList .  ['}']
  122                     | RootAlternativeTypeList . ',' "..." ExceptionSpec ExtensionAdditionAlternatives OptionalExtensionMarker

    ','  shift, and go to state 156

    $default  reduce using rule 121 (AlternativeTypeLists)


State 95

  123 RootAlternativeTypeList: AlternativeTypeList .  ['}', ',']
  132 AlternativeTypeList: AlternativeTypeList . ',' NamedType

    ','  shift, and go to state 157

    ','       [reduce using rule 123 (RootAlternativeTypeList)]
    $default  reduce using rule 123 (RootAlternativeTypeList)


State 96

  176 SizeConstraint: SIZE Constraint .

    $default  reduce using rule 176 (SizeConstraint)


State 97

    3 empty: . %empty  ['}', ',']
   87 SequenceType: SEQUENCE '{' "..." . ExceptionSpec OptionalExtensionMarker '}'
   94 ComponentTypeLists: "..." . ExceptionSpec ExtensionAdditions ExtensionEndMarker ',' RootComponentTypeList
   95                   | "..." . ExceptionSpec ExtensionAdditions OptionalExtensionMarker
  177 ExceptionSpec: . '!' ExceptionIdentification
  178              | . empty

    '!'  shift, and go to state 158

    $default  reduce using rule 3 (empty)

    empty          go to state 159
    ExceptionSpec  go to state 160


State 98

  112 ComponentType: COMPONENTS . OF Type

    OF  shift, and go to state 161


State 99

   86 SequenceType: SEQUENCE '{' '}' .

    $default  reduce using rule 86 (SequenceType)


State 100

   88 SequenceType: SEQUENCE '{' ComponentTypeLists . '}'

    '}'  shift, and go to state 162


State 101

   91 ComponentTypeLists: RootComponentTypeList .  ['}']
   92                   | RootComponentTypeList . ',' "..." ExceptionSpec ExtensionAdditions OptionalExtensionMarker
   93                   | RootComponentTypeList . ',' "..." ExceptionSpec ExtensionAdditions ExtensionEndMarker ',' RootComponentTypeList

    ','  shift, and go to state 163

    $default  reduce using rule 91 (ComponentTypeLists)


State 102

   96 RootComponentTypeList: ComponentTypeList .  ['}', ',']
  108 ComponentTypeList: ComponentTypeList . ',' ComponentType

    ','  shift, and go to state 164

    ','       [reduce using rule 96 (RootComponentTypeList)]
    $default  reduce using rule 96 (RootComponentTypeList)


State 103

  107 ComponentTypeList: ComponentType .

    $default  reduce using rule 107 (ComponentTypeList)


State 104

  109 ComponentType: NamedType .  ["]]", '}', ',']
  110              | NamedType . OPTIONAL
  111              | NamedType . DEFAULT Value

    OPTIONAL  shift, and go to state 165
    DEFAULT   shift, and go to state 166

    $default  reduce using rule 109 (ComponentType)


State 105

  152 ElementSetSpec: ALL . EXCEPT Elements

    EXCEPT  shift, and go to state 167


State 106

  173 LowerEndValue: MIN .

    $default  reduce using rule 173 (LowerEndValue)


State 107

   21 BuiltinValue: "positive integer" .

    $default  reduce using rule 21 (BuiltinValue)


State 108

   22 BuiltinValue: "negative integer" .

    $default  reduce using rule 22 (BuiltinValue)


State 109

   23 BuiltinValue: HEXINT .

    $default  reduce using rule 23 (BuiltinValue)


State 110

   26 BuiltinValue: PLUS_INFINITY .

    $default  reduce using rule 26 (BuiltinValue)


State 111

   27 BuiltinValue: MINUS_INFINITY .

    $default  reduce using rule 27 (BuiltinValue)


State 112

   28 BuiltinValue: NOT_A_NUMBER .

    $default  reduce using rule 28 (BuiltinValue)


State 113

   18 BuiltinValue: TRUE .

    $default  reduce using rule 18 (BuiltinValue)


State 114

   19 BuiltinValue: FALSE .

    $default  reduce using rule 19 (BuiltinValue)


State 115

   20 BuiltinValue: NULL .

    $default  reduce using rule 20 (BuiltinValue)


State 116

   24 BuiltinValue: "positive real number" .

    $default  reduce using rule 24 (BuiltinValue)


State 117

   25 BuiltinValue: "negative real number" .

    $default  reduce using rule 25 (BuiltinValue)


State 118

    4 identifier: . "identifier"
    6 valuereference: . identifier
   16 Value: . BuiltinValue
   17      | . DefinedValue
   18 BuiltinValue: . TRUE
   19             | . FALSE
   20             | . NULL
   21             | . "positive integer"
   22             | . "negative integer"
   23             | . HEXINT
   24             | . "positive real number"
   25             | . "negative real number"
   26             | . PLUS_INFINITY
   27             | . MINUS_INFINITY
   28             | . NOT_A_NUMBER
   29 DefinedValue: . valuereference
  152 ElementSetSpec: . ALL EXCEPT Elements
  153               | . Elements NextElements
  161 Elements: . '(' ElementSetSpec ')'
  161         | '(' . ElementSetSpec ')'
  162         | . SubTypeElements
  163 SubTypeElements: . SingleValue
  164                | . ValueRange
  165                | . SizeConstraint
  166 SingleValue: . Value
  167 ValueRange: . LowerEndpoint ".." UpperEndpoint
  168 LowerEndpoint: . LowerEndValue
  169              | . LowerEndValue '<'
  172 LowerEndValue: . Value
  173              | . MIN
  176 SizeConstraint: . SIZE Constraint

    SIZE                    shift, and go to state 64
    ALL                     shift, and go to state 105
    MIN                     shift, and go to state 106
    "positive integer"      shift, and go to state 107
    "negative integer"      shift, and go to state 108
    HEXINT                  shift, and go to state 109
    "identifier"            shift, and go to state 4
    PLUS_INFINITY           shift, and go to state 110
    MINUS_INFINITY          shift, and go to state 111
    NOT_A_NUMBER            shift, and go to state 112
    TRUE                    shift, and go to state 113
    FALSE                   shift, and go to state 114
    NULL                    shift, and go to state 115
    "positive real number"  shift, and go to state 116
    "negative real number"  shift, and go to state 117
    '('                     shift, and go to state 118

    identifier       go to state 6
    valuereference   go to state 81
    Value            go to state 119
    BuiltinValue     go to state 120
    DefinedValue     go to state 121
    ElementSetSpec   go to state 168
    Elements         go to state 126
    SubTypeElements  go to state 127
    SingleValue      go to state 128
    ValueRange       go to state 129
    LowerEndpoint    go to state 130
    LowerEndValue    go to state 131
    SizeConstraint   go to state 132


State 119

  166 SingleValue: Value .  [INTERSECTION, UNION, ',', ')', '^', '|', '!']
  172 LowerEndValue: Value .  ["..", '<']

    ".."      reduce using rule 172 (LowerEndValue)
    '<'       reduce using rule 172 (LowerEndValue)
    $default  reduce using rule 166 (SingleValue)


State 120

   16 Value: BuiltinValue .

    $default  reduce using rule 16 (Value)


State 121

   17 Value: DefinedValue .

    $default  reduce using rule 17 (Value)


State 122

    3 empty: . %empty  [')']
  146 Constraint: '(' ConstraintSpec . ExceptionSpec ')'
  177 ExceptionSpec: . '!' ExceptionIdentification
  178              | . empty

    '!'  shift, and go to state 158

    $default  reduce using rule 3 (empty)

    empty          go to state 159
    ExceptionSpec  go to state 169


State 123

  147 ConstraintSpec: SubtypeConstraint .

    $default  reduce using rule 147 (ConstraintSpec)


State 124

  148 SubtypeConstraint: ElementSetSpecs .

    $default  reduce using rule 148 (SubtypeConstraint)


State 125

  149 ElementSetSpecs: ElementSetSpec .  [')', '!']
  150                | ElementSetSpec . ',' "..."
  151                | ElementSetSpec . ',' "..." ',' ElementSetSpec

    ','  shift, and go to state 170

    $default  reduce using rule 149 (ElementSetSpecs)


State 126

    3 empty: . %empty  [',', ')', '!']
  153 ElementSetSpec: Elements . NextElements
  154 NextElements: . UnionMark Elements NextElements
  155             | . IntersectionMark Elements NextElements
  156             | . empty
  157 IntersectionMark: . INTERSECTION
  158                 | . '^'
  159 UnionMark: . UNION
  160          | . '|'

    INTERSECTION  shift, and go to state 171
    UNION         shift, and go to state 172
    '^'           shift, and go to state 173
    '|'           shift, and go to state 174

    $default  reduce using rule 3 (empty)

    empty             go to state 175
    NextElements      go to state 176
    IntersectionMark  go to state 177
    UnionMark         go to state 178


State 127

  162 Elements: SubTypeElements .

    $default  reduce using rule 162 (Elements)


State 128

  163 SubTypeElements: SingleValue .

    $default  reduce using rule 163 (SubTypeElements)


State 129

  164 SubTypeElements: ValueRange .

    $default  reduce using rule 164 (SubTypeElements)


State 130

  167 ValueRange: LowerEndpoint . ".." UpperEndpoint

    ".."  shift, and go to state 179


State 131

  168 LowerEndpoint: LowerEndValue .  [".."]
  169              | LowerEndValue . '<'

    '<'  shift, and go to state 180

    $default  reduce using rule 168 (LowerEndpoint)


State 132

  165 SubTypeElements: SizeConstraint .

    $default  reduce using rule 165 (SubTypeElements)


State 133

   43 ConstrainedType: Type . Constraint
  118 SequenceOfTypeTarget: Type .  [$end, "::=", OPTIONAL, DEFAULT, "identifier", "]]", "typereference", '}', ',', '(', ':']
  146 Constraint: . '(' ConstraintSpec ExceptionSpec ')'

    '('  shift, and go to state 67

    '('       [reduce using rule 118 (SequenceOfTypeTarget)]
    $default  reduce using rule 118 (SequenceOfTypeTarget)

    Constraint  go to state 74


State 134

  119 SequenceOfTypeTarget: NamedType .

    $default  reduce using rule 119 (SequenceOfTypeTarget)


State 135

  114 SequenceOfType: SEQUENCE SequenceOfTypeVariant SequenceOfTypeTarget .

    $default  reduce using rule 114 (SequenceOfType)


State 136

  116 SequenceOfTypeVariant: Constraint OF .

    $default  reduce using rule 116 (SequenceOfTypeVariant)


State 137

  117 SequenceOfTypeVariant: SizeConstraint OF .

    $default  reduce using rule 117 (SequenceOfTypeVariant)


State 138

   66 NamedNumber: identifier . '(' NamedNumberNumber ')'

    '('  shift, and go to state 181


State 139

   63 IntegerType: INTEGER '{' NamedNumberList . '}'
   65 NamedNumberList: NamedNumberList . ',' NamedNumber

    '}'  shift, and go to state 182
    ','  shift, and go to state 183


State 140

   64 NamedNumberList: NamedNumber .

    $default  reduce using rule 64 (NamedNumberList)


State 141

   66 NamedNumber: identifier . '(' NamedNumberNumber ')'
   79 EnumerationItem: identifier .  ['}', ',']

    '('  shift, and go to state 181

    $default  reduce using rule 79 (EnumerationItem)


State 142

   80 EnumerationItem: NamedNumber .

    $default  reduce using rule 80 (EnumerationItem)


State 143

   71 EnumeratedType: ENUMERATED '{' Enumerations . '}'

    '}'  shift, and go to state 184


State 144

   72 Enumerations: RootEnumeration .  ['}']
   73             | RootEnumeration . ',' "..." ExceptionSpec
   74             | RootEnumeration . ',' "..." ExceptionSpec ',' AdditionalEnumeration

    ','  shift, and go to state 185

    $default  reduce using rule 72 (Enumerations)


State 145

   75 RootEnumeration: Enumeration .  ['}', ',']
   78 Enumeration: Enumeration . ',' EnumerationItem

    ','  shift, and go to state 186

    ','       [reduce using rule 75 (RootEnumeration)]
    $default  reduce using rule 75 (RootEnumeration)


State 146

   77 Enumeration: EnumerationItem .

    $default  reduce using rule 77 (Enumeration)


State 147

   15 ValueAssignment: valuereference Type "::=" Value .

    $default  reduce using rule 15 (ValueAssignment)


State 148

  141 Class: APPLICATION ClassNumber .

    $default  reduce using rule 141 (Class)


State 149

  142 Class: PRIVATE ClassNumber .

    $default  reduce using rule 142 (Class)


State 150

  140 Class: UNIVERSAL ClassNumber .

    $default  reduce using rule 140 (Class)


State 151

    4 identifier: . "identifier"
    6 valuereference: . identifier
    7 number: . "positive integer"
    8       | . "negative integer"
   29 DefinedValue: . valuereference
  138 Tag: '[' encodingreference ':' . Class ']'
  140 Class: . UNIVERSAL ClassNumber
  141      | . APPLICATION ClassNumber
  142      | . PRIVATE ClassNumber
  143      | . ClassNumber
  144 ClassNumber: . number
  145            | . DefinedValue

    APPLICATION         shift, and go to state 75
    PRIVATE             shift, and go to state 76
    UNIVERSAL           shift, and go to state 77
    "positive integer"  shift, and go to state 78
    "negative integer"  shift, and go to state 79
    "identifier"        shift, and go to state 4

    identifier      go to state 6
    valuereference  go to state 81
    number          go to state 82
    DefinedValue    go to state 84
    Class           go to state 187
    ClassNumber     go to state 86


State 152

  139 Tag: '[' Class ']' .

    $default  reduce using rule 139 (Tag)


State 153

   65 NamedNumberList: NamedNumberList . ',' NamedNumber
   83 BitStringType: BIT STRING '{' NamedNumberList . '}'

    '}'  shift, and go to state 188
    ','  shift, and go to state 183


State 154

    5 typereference: . "typereference"
   30 Type: . BitStringType
   31     | . BooleanType
   32     | . CharacterStringType
   33     | . ChoiceType
   34     | . EnumeratedType
   35     | . IntegerType
   36     | . NullType
   37     | . OctetStringType
   38     | . RealType
   39     | . SequenceOfType
   40     | . SequenceType
   41     | . DefinedType
   42     | . ConstrainedType
   43 ConstrainedType: . Type Constraint
   44 CharacterStringType: . RestrictedCharacterStringType
   45                    | . UnrestrictedCharacterStringType
   46 UnrestrictedCharacterStringType: . CHARACTER STRING
   47 RestrictedCharacterStringType: . BMPString
   48                              | . GeneralString
   49                              | . GraphicString
   50                              | . IA5String
   51                              | . ISO646String
   52                              | . NumericString
   53                              | . PrintableString
   54                              | . TeletexString
   55                              | . T61String
   56                              | . UniversalString
   57                              | . UTF8String
   58                              | . VideotexString
   59                              | . VisibleString
   60 DefinedType: . typereference
   61 BooleanType: . BOOLEAN
   62 IntegerType: . INTEGER
   63            | . INTEGER '{' NamedNumberList '}'
   71 EnumeratedType: . ENUMERATED '{' Enumerations '}'
   81 RealType: . REAL
   82 BitStringType: . BIT STRING
   83              | . BIT STRING '{' NamedNumberList '}'
   84 OctetStringType: . OCTET STRING
   85 NullType: . NULL
   86 SequenceType: . SEQUENCE '{' '}'
   87             | . SEQUENCE '{' "..." ExceptionSpec OptionalExtensionMarker '}'
   88             | . SEQUENCE '{' ComponentTypeLists '}'
  113 NamedType: identifier optTypePrefix . Type
  114 SequenceOfType: . SEQUENCE SequenceOfTypeVariant SequenceOfTypeTarget
  120 ChoiceType: . CHOICE '{' AlternativeTypeLists '}'

    OCTET            shift, and go to state 14
    CHARACTER        shift, and go to state 15
    BIT              shift, and go to state 16
    CHOICE           shift, and go to state 17
    SEQUENCE         shift, and go to state 18
    BOOLEAN          shift, and go to state 19
    INTEGER          shift, and go to state 20
    REAL             shift, and go to state 21
    ENUMERATED       shift, and go to state 22
    BMPString        shift, and go to state 23
    GeneralString    shift, and go to state 24
    GraphicString    shift, and go to state 25
    IA5String        shift, and go to state 26
    ISO646String     shift, and go to state 27
    NumericString    shift, and go to state 28
    PrintableString  shift, and go to state 29
    TeletexString    shift, and go to state 30
    T61String        shift, and go to state 31
    UniversalString  shift, and go to state 32
    UTF8String       shift, and go to state 33
    VideotexString   shift, and go to state 34
    VisibleString    shift, and go to state 35
    NULL             shift, and go to state 36
    "typereference"  shift, and go to state 5

    typereference                    go to state 37
    Type                             go to state 189
    ConstrainedType                  go to state 39
    CharacterStringType              go to state 40
    UnrestrictedCharacterStringType  go to state 41
    RestrictedCharacterStringType    go to state 42
    DefinedType                      go to state 43
    BooleanType                      go to state 44
    IntegerType                      go to state 45
    EnumeratedType                   go to state 46
    RealType                         go to state 47
    BitStringType                    go to state 48
    OctetStringType                  go to state 49
    NullType                         go to state 50
    SequenceType                     go to state 51
    SequenceOfType                   go to state 52
    ChoiceType                       go to state 53


State 155

  120 ChoiceType: CHOICE '{' AlternativeTypeLists '}' .

    $default  reduce using rule 120 (ChoiceType)


State 156

  122 AlternativeTypeLists: RootAlternativeTypeList ',' . "..." ExceptionSpec ExtensionAdditionAlternatives OptionalExtensionMarker

    "..."  shift, and go to state 190


State 157

    4 identifier: . "identifier"
  113 NamedType: . identifier optTypePrefix Type
  132 AlternativeTypeList: AlternativeTypeList ',' . NamedType

    "identifier"  shift, and go to state 4

    identifier  go to state 91
    NamedType   go to state 191


State 158

    4 identifier: . "identifier"
    5 typereference: . "typereference"
    6 valuereference: . identifier
   29 DefinedValue: . valuereference
   30 Type: . BitStringType
   31     | . BooleanType
   32     | . CharacterStringType
   33     | . ChoiceType
   34     | . EnumeratedType
   35     | . IntegerType
   36     | . NullType
   37     | . OctetStringType
   38     | . RealType
   39     | . SequenceOfType
   40     | . SequenceType
   41     | . DefinedType
   42     | . ConstrainedType
   43 ConstrainedType: . Type Constraint
   44 CharacterStringType: . RestrictedCharacterStringType
   45                    | . UnrestrictedCharacterStringType
   46 UnrestrictedCharacterStringType: . CHARACTER STRING
   47 RestrictedCharacterStringType: . BMPString
   48                              | . GeneralString
   49                              | . GraphicString
   50                              | . IA5String
   51                              | . ISO646String
   52                              | . NumericString
   53                              | . PrintableString
   54                              | . TeletexString
   55                              | . T61String
   56                              | . UniversalString
   57                              | . UTF8String
   58                              | . VideotexString
   59                              | . VisibleString
   60 DefinedType: . typereference
   61 BooleanType: . BOOLEAN
   62 IntegerType: . INTEGER
   63            | . INTEGER '{' NamedNumberList '}'
   69 SignedNumber: . "positive integer"
   70             | . "negative integer"
   71 EnumeratedType: . ENUMERATED '{' Enumerations '}'
   81 RealType: . REAL
   82 BitStringType: . BIT STRING
   83              | . BIT STRING '{' NamedNumberList '}'
   84 OctetStringType: . OCTET STRING
   85 NullType: . NULL
   86 SequenceType: . SEQUENCE '{' '}'
   87             | . SEQUENCE '{' "..." ExceptionSpec OptionalExtensionMarker '}'
   88             | . SEQUENCE '{' ComponentTypeLists '}'
  114 SequenceOfType: . SEQUENCE SequenceOfTypeVariant SequenceOfTypeTarget
  120 ChoiceType: . CHOICE '{' AlternativeTypeLists '}'
  177 ExceptionSpec: '!' . ExceptionIdentification
  179 ExceptionIdentification: . Type ':' Value
  180                        | . DefinedValue
  181                        | . SignedNumber

    OCTET               shift, and go to state 14
    CHARACTER           shift, and go to state 15
    BIT                 shift, and go to state 16
    CHOICE              shift, and go to state 17
    SEQUENCE            shift, and go to state 18
    BOOLEAN             shift, and go to state 19
    INTEGER             shift, and go to state 20
    REAL                shift, and go to state 21
    ENUMERATED          shift, and go to state 22
    BMPString           shift, and go to state 23
    GeneralString       shift, and go to state 24
    GraphicString       shift, and go to state 25
    IA5String           shift, and go to state 26
    ISO646String        shift, and go to state 27
    NumericString       shift, and go to state 28
    PrintableString     shift, and go to state 29
    TeletexString       shift, and go to state 30
    T61String           shift, and go to state 31
    UniversalString     shift, and go to state 32
    UTF8String          shift, and go to state 33
    VideotexString      shift, and go to state 34
    VisibleString       shift, and go to state 35
    "positive integer"  shift, and go to state 192
    "negative integer"  shift, and go to state 193
    "identifier"        shift, and go to state 4
    NULL                shift, and go to state 36
    "typereference"     shift, and go to state 5

    identifier                       go to state 6
    typereference                    go to state 37
    valuereference                   go to state 81
    DefinedValue                     go to state 194
    Type                             go to state 195
    ConstrainedType                  go to state 39
    CharacterStringType              go to state 40
    UnrestrictedCharacterStringType  go to state 41
    RestrictedCharacterStringType    go to state 42
    DefinedType                      go to state 43
    BooleanType                      go to state 44
    IntegerType                      go to state 45
    SignedNumber                     go to state 196
    EnumeratedType                   go to state 46
    RealType                         go to state 47
    BitStringType                    go to state 48
    OctetStringType                  go to state 49
    NullType                         go to state 50
    SequenceType                     go to state 51
    SequenceOfType                   go to state 52
    ChoiceType                       go to state 53
    ExceptionIdentification          go to state 197


State 159

  178 ExceptionSpec: empty .

    $default  reduce using rule 178 (ExceptionSpec)


State 160

    3 empty: . %empty  ['}', ',']
   87 SequenceType: SEQUENCE '{' "..." ExceptionSpec . OptionalExtensionMarker '}'
   89 OptionalExtensionMarker: . ',' "..."
   90                        | . empty
   94 ComponentTypeLists: "..." ExceptionSpec . ExtensionAdditions ExtensionEndMarker ',' RootComponentTypeList
   95                   | "..." ExceptionSpec . ExtensionAdditions OptionalExtensionMarker
   98 ExtensionAdditions: . ',' ExtensionAdditionList
   99                   | . empty

    ','  shift, and go to state 198

    ','       [reduce using rule 3 (empty)]
    $default  reduce using rule 3 (empty)

    empty                    go to state 199
    OptionalExtensionMarker  go to state 200
    ExtensionAdditions       go to state 201


State 161

    5 typereference: . "typereference"
   30 Type: . BitStringType
   31     | . BooleanType
   32     | . CharacterStringType
   33     | . ChoiceType
   34     | . EnumeratedType
   35     | . IntegerType
   36     | . NullType
   37     | . OctetStringType
   38     | . RealType
   39     | . SequenceOfType
   40     | . SequenceType
   41     | . DefinedType
   42     | . ConstrainedType
   43 ConstrainedType: . Type Constraint
   44 CharacterStringType: . RestrictedCharacterStringType
   45                    | . UnrestrictedCharacterStringType
   46 UnrestrictedCharacterStringType: . CHARACTER STRING
   47 RestrictedCharacterStringType: . BMPString
   48                              | . GeneralString
   49                              | . GraphicString
   50                              | . IA5String
   51                              | . ISO646String
   52                              | . NumericString
   53                              | . PrintableString
   54                              | . TeletexString
   55                              | . T61String
   56                              | . UniversalString
   57                              | . UTF8String
   58                              | . VideotexString
   59                              | . VisibleString
   60 DefinedType: . typereference
   61 BooleanType: . BOOLEAN
   62 IntegerType: . INTEGER
   63            | . INTEGER '{' NamedNumberList '}'
   71 EnumeratedType: . ENUMERATED '{' Enumerations '}'
   81 RealType: . REAL
   82 BitStringType: . BIT STRING
   83              | . BIT STRING '{' NamedNumberList '}'
   84 OctetStringType: . OCTET STRING
   85 NullType: . NULL
   86 SequenceType: . SEQUENCE '{' '}'
   87             | . SEQUENCE '{' "..." ExceptionSpec OptionalExtensionMarker '}'
   88             | . SEQUENCE '{' ComponentTypeLists '}'
  112 ComponentType: COMPONENTS OF . Type
  114 SequenceOfType: . SEQUENCE SequenceOfTypeVariant SequenceOfTypeTarget
  120 ChoiceType: . CHOICE '{' AlternativeTypeLists '}'

    OCTET            shift, and go to state 14
    CHARACTER        shift, and go to state 15
    BIT              shift, and go to state 16
    CHOICE           shift, and go to state 17
    SEQUENCE         shift, and go to state 18
    BOOLEAN          shift, and go to state 19
    INTEGER          shift, and go to state 20
    REAL             shift, and go to state 21
    ENUMERATED       shift, and go to state 22
    BMPString        shift, and go to state 23
    GeneralString    shift, and go to state 24
    GraphicString    shift, and go to state 25
    IA5String        shift, and go to state 26
    ISO646String     shift, and go to state 27
    NumericString    shift, and go to state 28
    PrintableString  shift, and go to state 29
    TeletexString    shift, and go to state 30
    T61String        shift, and go to state 31
    UniversalString  shift, and go to state 32
    UTF8String       shift, and go to state 33
    VideotexString   shift, and go to state 34
    VisibleString    shift, and go to state 35
    NULL             shift, and go to state 36
    "typereference"  shift, and go to state 5

    typereference                    go to state 37
    Type                             go to state 202
    ConstrainedType                  go to state 39
    CharacterStringType              go to state 40
    UnrestrictedCharacterStringType  go to state 41
    RestrictedCharacterStringType    go to state 42
    DefinedType                      go to state 43
    BooleanType                      go to state 44
    IntegerType                      go to state 45
    EnumeratedType                   go to state 46
    RealType                         go to state 47
    BitStringType                    go to state 48
    OctetStringType                  go to state 49
    NullType                         go to state 50
    SequenceType                     go to state 51
    SequenceOfType                   go to state 52
    ChoiceType                       go to state 53


State 162

   88 SequenceType: SEQUENCE '{' ComponentTypeLists '}' .

    $default  reduce using rule 88 (SequenceType)


State 163

   92 ComponentTypeLists: RootComponentTypeList ',' . "..." ExceptionSpec ExtensionAdditions OptionalExtensionMarker
   93                   | RootComponentTypeList ',' . "..." ExceptionSpec ExtensionAdditions ExtensionEndMarker ',' RootComponentTypeList

    "..."  shift, and go to state 203


State 164

    4 identifier: . "identifier"
  108 ComponentTypeList: ComponentTypeList ',' . ComponentType
  109 ComponentType: . NamedType
  110              | . NamedType OPTIONAL
  111              | . NamedType DEFAULT Value
  112              | . COMPONENTS OF Type
  113 NamedType: . identifier optTypePrefix Type

    COMPONENTS    shift, and go to state 98
    "identifier"  shift, and go to state 4

    identifier     go to state 91
    ComponentType  go to state 204
    NamedType      go to state 104


State 165

  110 ComponentType: NamedType OPTIONAL .

    $default  reduce using rule 110 (ComponentType)


State 166

    4 identifier: . "identifier"
    6 valuereference: . identifier
   16 Value: . BuiltinValue
   17      | . DefinedValue
   18 BuiltinValue: . TRUE
   19             | . FALSE
   20             | . NULL
   21             | . "positive integer"
   22             | . "negative integer"
   23             | . HEXINT
   24             | . "positive real number"
   25             | . "negative real number"
   26             | . PLUS_INFINITY
   27             | . MINUS_INFINITY
   28             | . NOT_A_NUMBER
   29 DefinedValue: . valuereference
  111 ComponentType: NamedType DEFAULT . Value

    "positive integer"      shift, and go to state 107
    "negative integer"      shift, and go to state 108
    HEXINT                  shift, and go to state 109
    "identifier"            shift, and go to state 4
    PLUS_INFINITY           shift, and go to state 110
    MINUS_INFINITY          shift, and go to state 111
    NOT_A_NUMBER            shift, and go to state 112
    TRUE                    shift, and go to state 113
    FALSE                   shift, and go to state 114
    NULL                    shift, and go to state 115
    "positive real number"  shift, and go to state 116
    "negative real number"  shift, and go to state 117

    identifier      go to state 6
    valuereference  go to state 81
    Value           go to state 205
    BuiltinValue    go to state 120
    DefinedValue    go to state 121


State 167

    4 identifier: . "identifier"
    6 valuereference: . identifier
   16 Value: . BuiltinValue
   17      | . DefinedValue
   18 BuiltinValue: . TRUE
   19             | . FALSE
   20             | . NULL
   21             | . "positive integer"
   22             | . "negative integer"
   23             | . HEXINT
   24             | . "positive real number"
   25             | . "negative real number"
   26             | . PLUS_INFINITY
   27             | . MINUS_INFINITY
   28             | . NOT_A_NUMBER
   29 DefinedValue: . valuereference
  152 ElementSetSpec: ALL EXCEPT . Elements
  161 Elements: . '(' ElementSetSpec ')'
  162         | . SubTypeElements
  163 SubTypeElements: . SingleValue
  164                | . ValueRange
  165                | . SizeConstraint
  166 SingleValue: . Value
  167 ValueRange: . LowerEndpoint ".." UpperEndpoint
  168 LowerEndpoint: . LowerEndValue
  169              | . LowerEndValue '<'
  172 LowerEndValue: . Value
  173              | . MIN
  176 SizeConstraint: . SIZE Constraint

    SIZE                    shift, and go to state 64
    MIN                     shift, and go to state 106
    "positive integer"      shift, and go to state 107
    "negative integer"      shift, and go to state 108
    HEXINT                  shift, and go to state 109
    "identifier"            shift, and go to state 4
    PLUS_INFINITY           shift, and go to state 110
    MINUS_INFINITY          shift, and go to state 111
    NOT_A_NUMBER            shift, and go to state 112
    TRUE                    shift, and go to state 113
    FALSE                   shift, and go to state 114
    NULL                    shift, and go to state 115
    "positive real number"  shift, and go to state 116
    "negative real number"  shift, and go to state 117
    '('                     shift, and go to state 118

    identifier       go to state 6
    valuereference   go to state 81
    Value            go to state 119
    BuiltinValue     go to state 120
    DefinedValue     go to state 121
    Elements         go to state 206
    SubTypeElements  go to state 127
    SingleValue      go to state 128
    ValueRange       go to state 129
    LowerEndpoint    go to state 130
    LowerEndValue    go to state 131
    SizeConstraint   go to state 132


State 168

  161 Elements: '(' ElementSetSpec . ')'

    ')'  shift, and go to state 207


State 169

  146 Constraint: '(' ConstraintSpec ExceptionSpec . ')'

    ')'  shift, and go to state 208


State 170

  150 ElementSetSpecs: ElementSetSpec ',' . "..."
  151                | ElementSetSpec ',' . "..." ',' ElementSetSpec

    "..."  shift, and go to state 209


State 171

  157 IntersectionMark: INTERSECTION .

    $default  reduce using rule 157 (IntersectionMark)


State 172

  159 UnionMark: UNION .

    $default  reduce using rule 159 (UnionMark)


State 173

  158 IntersectionMark: '^' .

    $default  reduce using rule 158 (IntersectionMark)


State 174

  160 UnionMark: '|' .

    $default  reduce using rule 160 (UnionMark)


State 175

  156 NextElements: empty .

    $default  reduce using rule 156 (NextElements)


State 176

  153 ElementSetSpec: Elements NextElements .

    $default  reduce using rule 153 (ElementSetSpec)


State 177

    4 identifier: . "identifier"
    6 valuereference: . identifier
   16 Value: . BuiltinValue
   17      | . DefinedValue
   18 BuiltinValue: . TRUE
   19             | . FALSE
   20             | . NULL
   21             | . "positive integer"
   22             | . "negative integer"
   23             | . HEXINT
   24             | . "positive real number"
   25             | . "negative real number"
   26             | . PLUS_INFINITY
   27             | . MINUS_INFINITY
   28             | . NOT_A_NUMBER
   29 DefinedValue: . valuereference
  155 NextElements: IntersectionMark . Elements NextElements
  161 Elements: . '(' ElementSetSpec ')'
  162         | . SubTypeElements
  163 SubTypeElements: . SingleValue
  164                | . ValueRange
  165                | . SizeConstraint
  166 SingleValue: . Value
  167 ValueRange: . LowerEndpoint ".." UpperEndpoint
  168 LowerEndpoint: . LowerEndValue
  169              | . LowerEndValue '<'
  172 LowerEndValue: . Value
  173              | . MIN
  176 SizeConstraint: . SIZE Constraint

    SIZE                    shift, and go to state 64
    MIN                     shift, and go to state 106
    "positive integer"      shift, and go to state 107
    "negative integer"      shift, and go to state 108
    HEXINT                  shift, and go to state 109
    "identifier"            shift, and go to state 4
    PLUS_INFINITY           shift, and go to state 110
    MINUS_INFINITY          shift, and go to state 111
    NOT_A_NUMBER            shift, and go to state 112
    TRUE                    shift, and go to state 113
    FALSE                   shift, and go to state 114
    NULL                    shift, and go to state 115
    "positive real number"  shift, and go to state 116
    "negative real number"  shift, and go to state 117
    '('                     shift, and go to state 118

    identifier       go to state 6
    valuereference   go to state 81
    Value            go to state 119
    BuiltinValue     go to state 120
    DefinedValue     go to state 121
    Elements         go to state 210
    SubTypeElements  go to state 127
    SingleValue      go to state 128
    ValueRange       go to state 129
    LowerEndpoint    go to state 130
    LowerEndValue    go to state 131
    SizeConstraint   go to state 132


State 178

    4 identifier: . "identifier"
    6 valuereference: . identifier
   16 Value: . BuiltinValue
   17      | . DefinedValue
   18 BuiltinValue: . TRUE
   19             | . FALSE
   20             | . NULL
   21             | . "positive integer"
   22             | . "negative integer"
   23             | . HEXINT
   24             | . "positive real number"
   25             | . "negative real number"
   26             | . PLUS_INFINITY
   27             | . MINUS_INFINITY
   28             | . NOT_A_NUMBER
   29 DefinedValue: . valuereference
  154 NextElements: UnionMark . Elements NextElements
  161 Elements: . '(' ElementSetSpec ')'
  162         | . SubTypeElements
  163 SubTypeElements: . SingleValue
  164                | . ValueRange
  165                | . SizeConstraint
  166 SingleValue: . Value
  167 ValueRange: . LowerEndpoint ".." UpperEndpoint
  168 LowerEndpoint: . LowerEndValue
  169              | . LowerEndValue '<'
  172 LowerEndValue: . Value
  173              | . MIN
  176 SizeConstraint: . SIZE Constraint

    SIZE                    shift, and go to state 64
    MIN                     shift, and go to state 106
    "positive integer"      shift, and go to state 107
    "negative integer"      shift, and go to state 108
    HEXINT                  shift, and go to state 109
    "identifier"            shift, and go to state 4
    PLUS_INFINITY           shift, and go to state 110
    MINUS_INFINITY          shift, and go to state 111
    NOT_A_NUMBER            shift, and go to state 112
    TRUE                    shift, and go to state 113
    FALSE                   shift, and go to state 114
    NULL                    shift, and go to state 115
    "positive real number"  shift, and go to state 116
    "negative real number"  shift, and go to state 117
    '('                     shift, and go to state 118

    identifier       go to state 6
    valuereference   go to state 81
    Value            go to state 119
    BuiltinValue     go to state 120
    DefinedValue     go to state 121
    Elements         go to state 211
    SubTypeElements  go to state 127
    SingleValue      go to state 128
    ValueRange       go to state 129
    LowerEndpoint    go to state 130
    LowerEndValue    go to state 131
    SizeConstraint   go to state 132


State 179

    4 identifier: . "identifier"
    6 valuereference: . identifier
   16 Value: . BuiltinValue
   17      | . DefinedValue
   18 BuiltinValue: . TRUE
   19             | . FALSE
   20             | . NULL
   21             | . "positive integer"
   22             | . "negative integer"
   23             | . HEXINT
   24             | . "positive real number"
   25             | . "negative real number"
   26             | . PLUS_INFINITY
   27             | . MINUS_INFINITY
   28             | . NOT_A_NUMBER
   29 DefinedValue: . valuereference
  167 ValueRange: LowerEndpoint ".." . UpperEndpoint
  170 UpperEndpoint: . UpperEndValue
  171              | . '<' UpperEndValue
  174 UpperEndValue: . Value
  175              | . MAX

    MAX                     shift, and go to state 212
    "positive integer"      shift, and go to state 107
    "negative integer"      shift, and go to state 108
    HEXINT                  shift, and go to state 109
    "identifier"            shift, and go to state 4
    PLUS_INFINITY           shift, and go to state 110
    MINUS_INFINITY          shift, and go to state 111
    NOT_A_NUMBER            shift, and go to state 112
    TRUE                    shift, and go to state 113
    FALSE                   shift, and go to state 114
    NULL                    shift, and go to state 115
    "positive real number"  shift, and go to state 116
    "negative real number"  shift, and go to state 117
    '<'                     shift, and go to state 213

    identifier      go to state 6
    valuereference  go to state 81
    Value           go to state 214
    BuiltinValue    go to state 120
    DefinedValue    go to state 121
    UpperEndpoint   go to state 215
    UpperEndValue   go to state 216


State 180

  169 LowerEndpoint: LowerEndValue '<' .

    $default  reduce using rule 169 (LowerEndpoint)


State 181

    4 identifier: . "identifier"
    6 valuereference: . identifier
   29 DefinedValue: . valuereference
   66 NamedNumber: identifier '(' . NamedNumberNumber ')'
   67 NamedNumberNumber: . DefinedValue
   68                  | . SignedNumber
   69 SignedNumber: . "positive integer"
   70             | . "negative integer"

    "positive integer"  shift, and go to state 192
    "negative integer"  shift, and go to state 193
    "identifier"        shift, and go to state 4

    identifier         go to state 6
    valuereference     go to state 81
    DefinedValue       go to state 217
    NamedNumberNumber  go to state 218
    SignedNumber       go to state 219


State 182

   63 IntegerType: INTEGER '{' NamedNumberList '}' .

    $default  reduce using rule 63 (IntegerType)


State 183

    4 identifier: . "identifier"
   65 NamedNumberList: NamedNumberList ',' . NamedNumber
   66 NamedNumber: . identifier '(' NamedNumberNumber ')'

    "identifier"  shift, and go to state 4

    identifier   go to state 138
    NamedNumber  go to state 220


State 184

   71 EnumeratedType: ENUMERATED '{' Enumerations '}' .

    $default  reduce using rule 71 (EnumeratedType)


State 185

   73 Enumerations: RootEnumeration ',' . "..." ExceptionSpec
   74             | RootEnumeration ',' . "..." ExceptionSpec ',' AdditionalEnumeration

    "..."  shift, and go to state 221


State 186

    4 identifier: . "identifier"
   66 NamedNumber: . identifier '(' NamedNumberNumber ')'
   78 Enumeration: Enumeration ',' . EnumerationItem
   79 EnumerationItem: . identifier
   80                | . NamedNumber

    "identifier"  shift, and go to state 4

    identifier       go to state 141
    NamedNumber      go to state 142
    EnumerationItem  go to state 222


State 187

  138 Tag: '[' encodingreference ':' Class . ']'

    ']'  shift, and go to state 223


State 188

   83 BitStringType: BIT STRING '{' NamedNumberList '}' .

    $default  reduce using rule 83 (BitStringType)


State 189

   43 ConstrainedType: Type . Constraint
  113 NamedType: identifier optTypePrefix Type .  [$end, "::=", OPTIONAL, DEFAULT, "identifier", "]]", "typereference", '}', ',', '(', ':']
  146 Constraint: . '(' ConstraintSpec ExceptionSpec ')'

    '('  shift, and go to state 67

    '('       [reduce using rule 113 (NamedType)]
    $default  reduce using rule 113 (NamedType)

    Constraint  go to state 74


State 190

    3 empty: . %empty  ['}', ',']
  122 AlternativeTypeLists: RootAlternativeTypeList ',' "..." . ExceptionSpec ExtensionAdditionAlternatives OptionalExtensionMarker
  177 ExceptionSpec: . '!' ExceptionIdentification
  178              | . empty

    '!'  shift, and go to state 158

    $default  reduce using rule 3 (empty)

    empty          go to state 159
    ExceptionSpec  go to state 224


State 191

  132 AlternativeTypeList: AlternativeTypeList ',' NamedType .

    $default  reduce using rule 132 (AlternativeTypeList)


State 192

   69 SignedNumber: "positive integer" .

    $default  reduce using rule 69 (SignedNumber)


State 193

   70 SignedNumber: "negative integer" .

    $default  reduce using rule 70 (SignedNumber)


State 194

  180 ExceptionIdentification: DefinedValue .

    $default  reduce using rule 180 (ExceptionIdentification)


State 195

   43 ConstrainedType: Type . Constraint
  146 Constraint: . '(' ConstraintSpec ExceptionSpec ')'
  179 ExceptionIdentification: Type . ':' Value

    '('  shift, and go to state 67
    ':'  shift, and go to state 225

    Constraint  go to state 74


State 196

  181 ExceptionIdentification: SignedNumber .

    $default  reduce using rule 181 (ExceptionIdentification)


State 197

  177 ExceptionSpec: '!' ExceptionIdentification .

    $default  reduce using rule 177 (ExceptionSpec)


State 198

    4 identifier: . "identifier"
   89 OptionalExtensionMarker: ',' . "..."
   98 ExtensionAdditions: ',' . ExtensionAdditionList
  100 ExtensionAdditionList: . ExtensionAddition
  101                      | . ExtensionAdditionList ',' ExtensionAddition
  102 ExtensionAddition: . ComponentType
  103                  | . ExtensionAdditionGroup
  104 ExtensionAdditionGroup: . "[[" VersionNumber ComponentTypeList "]]"
  109 ComponentType: . NamedType
  110              | . NamedType OPTIONAL
  111              | . NamedType DEFAULT Value
  112              | . COMPONENTS OF Type
  113 NamedType: . identifier optTypePrefix Type

    "[["          shift, and go to state 226
    "..."         shift, and go to state 227
    COMPONENTS    shift, and go to state 98
    "identifier"  shift, and go to state 4

    identifier              go to state 91
    ExtensionAdditionList   go to state 228
    ExtensionAddition       go to state 229
    ExtensionAdditionGroup  go to state 230
    ComponentType           go to state 231
    NamedType               go to state 104


State 199

   90 OptionalExtensionMarker: empty .  ['}']
   99 ExtensionAdditions: empty .  ['}', ',']

    '}'       reduce using rule 90 (OptionalExtensionMarker)
    '}'       [reduce using rule 99 (ExtensionAdditions)]
    ','       reduce using rule 99 (ExtensionAdditions)
    $default  reduce using rule 90 (OptionalExtensionMarker)


State 200

   87 SequenceType: SEQUENCE '{' "..." ExceptionSpec OptionalExtensionMarker . '}'

    '}'  shift, and go to state 232


State 201

    3 empty: . %empty  ['}']
   89 OptionalExtensionMarker: . ',' "..."
   90                        | . empty
   94 ComponentTypeLists: "..." ExceptionSpec ExtensionAdditions . ExtensionEndMarker ',' RootComponentTypeList
   95                   | "..." ExceptionSpec ExtensionAdditions . OptionalExtensionMarker
   97 ExtensionEndMarker: . ',' "..."

    ','  shift, and go to state 233

    $default  reduce using rule 3 (empty)

    empty                    go to state 234
    OptionalExtensionMarker  go to state 235
    ExtensionEndMarker       go to state 236


State 202

   43 ConstrainedType: Type . Constraint
  112 ComponentType: COMPONENTS OF Type .  ["]]", '}', ',']
  146 Constraint: . '(' ConstraintSpec ExceptionSpec ')'

    '('  shift, and go to state 67

    $default  reduce using rule 112 (ComponentType)

    Constraint  go to state 74


State 203

    3 empty: . %empty  ['}', ',']
   92 ComponentTypeLists: RootComponentTypeList ',' "..." . ExceptionSpec ExtensionAdditions OptionalExtensionMarker
   93                   | RootComponentTypeList ',' "..." . ExceptionSpec ExtensionAdditions ExtensionEndMarker ',' RootComponentTypeList
  177 ExceptionSpec: . '!' ExceptionIdentification
  178              | . empty

    '!'  shift, and go to state 158

    $default  reduce using rule 3 (empty)

    empty          go to state 159
    ExceptionSpec  go to state 237


State 204

  108 ComponentTypeList: ComponentTypeList ',' ComponentType .

    $default  reduce using rule 108 (ComponentTypeList)


State 205

  111 ComponentType: NamedType DEFAULT Value .

    $default  reduce using rule 111 (ComponentType)


State 206

  152 ElementSetSpec: ALL EXCEPT Elements .

    $default  reduce using rule 152 (ElementSetSpec)


State 207

  161 Elements: '(' ElementSetSpec ')' .

    $default  reduce using rule 161 (Elements)


State 208

  146 Constraint: '(' ConstraintSpec ExceptionSpec ')' .

    $default  reduce using rule 146 (Constraint)


State 209

  150 ElementSetSpecs: ElementSetSpec ',' "..." .  [')', '!']
  151                | ElementSetSpec ',' "..." . ',' ElementSetSpec

    ','  shift, and go to state 238

    $default  reduce using rule 150 (ElementSetSpecs)


State 210

    3 empty: . %empty  [',', ')', '!']
  154 NextElements: . UnionMark Elements NextElements
  155             | . IntersectionMark Elements NextElements
  155             | IntersectionMark Elements . NextElements
  156             | . empty
  157 IntersectionMark: . INTERSECTION
  158                 | . '^'
  159 UnionMark: . UNION
  160          | . '|'

    INTERSECTION  shift, and go to state 171
    UNION         shift, and go to state 172
    '^'           shift, and go to state 173
    '|'           shift, and go to state 174

    $default  reduce using rule 3 (empty)

    empty             go to state 175
    NextElements      go to state 239
    IntersectionMark  go to state 177
    UnionMark         go to state 178


State 211

    3 empty: . %empty  [',', ')', '!']
  154 NextElements: . UnionMark Elements NextElements
  154             | UnionMark Elements . NextElements
  155             | . IntersectionMark Elements NextElements
  156             | . empty
  157 IntersectionMark: . INTERSECTION
  158                 | . '^'
  159 UnionMark: . UNION
  160          | . '|'

    INTERSECTION  shift, and go to state 171
    UNION         shift, and go to state 172
    '^'           shift, and go to state 173
    '|'           shift, and go to state 174

    $default  reduce using rule 3 (empty)

    empty             go to state 175
    NextElements      go to state 240
    IntersectionMark  go to state 177
    UnionMark         go to state 178


State 212

  175 UpperEndValue: MAX .

    $default  reduce using rule 175 (UpperEndValue)


State 213

    4 identifier: . "identifier"
    6 valuereference: . identifier
   16 Value: . BuiltinValue
   17      | . DefinedValue
   18 BuiltinValue: . TRUE
   19             | . FALSE
   20             | . NULL
   21             | . "positive integer"
   22             | . "negative integer"
   23             | . HEXINT
   24             | . "positive real number"
   25             | . "negative real number"
   26             | . PLUS_INFINITY
   27             | . MINUS_INFINITY
   28             | . NOT_A_NUMBER
   29 DefinedValue: . valuereference
  171 UpperEndpoint: '<' . UpperEndValue
  174 UpperEndValue: . Value
  175              | . MAX

    MAX                     shift, and go to state 212
    "positive integer"      shift, and go to state 107
    "negative integer"      shift, and go to state 108
    HEXINT                  shift, and go to state 109
    "identifier"            shift, and go to state 4
    PLUS_INFINITY           shift, and go to state 110
    MINUS_INFINITY          shift, and go to state 111
    NOT_A_NUMBER            shift, and go to state 112
    TRUE                    shift, and go to state 113
    FALSE                   shift, and go to state 114
    NULL                    shift, and go to state 115
    "positive real number"  shift, and go to state 116
    "negative real number"  shift, and go to state 117

    identifier      go to state 6
    valuereference  go to state 81
    Value           go to state 214
    BuiltinValue    go to state 120
    DefinedValue    go to state 121
    UpperEndValue   go to state 241


State 214

  174 UpperEndValue: Value .

    $default  reduce using rule 174 (UpperEndValue)


State 215

  167 ValueRange: LowerEndpoint ".." UpperEndpoint .

    $default  reduce using rule 167 (ValueRange)


State 216

  170 UpperEndpoint: UpperEndValue .

    $default  reduce using rule 170 (UpperEndpoint)


State 217

   67 NamedNumberNumber: DefinedValue .

    $default  reduce using rule 67 (NamedNumberNumber)


State 218

   66 NamedNumber: identifier '(' NamedNumberNumber . ')'

    ')'  shift, and go to state 242


State 219

   68 NamedNumberNumber: SignedNumber .

    $default  reduce using rule 68 (NamedNumberNumber)


State 220

   65 NamedNumberList: NamedNumberList ',' NamedNumber .

    $default  reduce using rule 65 (NamedNumberList)


State 221

    3 empty: . %empty  ['}', ',']
   73 Enumerations: RootEnumeration ',' "..." . ExceptionSpec
   74             | RootEnumeration ',' "..." . ExceptionSpec ',' AdditionalEnumeration
  177 ExceptionSpec: . '!' ExceptionIdentification
  178              | . empty

    '!'  shift, and go to state 158

    $default  reduce using rule 3 (empty)

    empty          go to state 159
    ExceptionSpec  go to state 243


State 222

   78 Enumeration: Enumeration ',' EnumerationItem .

    $default  reduce using rule 78 (Enumeration)


State 223

  138 Tag: '[' encodingreference ':' Class ']' .

    $default  reduce using rule 138 (Tag)


State 224

    3 empty: . %empty  ['}', ',']
  122 AlternativeTypeLists: RootAlternativeTypeList ',' "..." ExceptionSpec . ExtensionAdditionAlternatives OptionalExtensionMarker
  124 ExtensionAdditionAlternatives: . ',' ExtensionAdditionAlternativesList
  125                              | . empty

    ','  shift, and go to state 244

    ','       [reduce using rule 3 (empty)]
    $default  reduce using rule 3 (empty)

    empty                          go to state 245
    ExtensionAdditionAlternatives  go to state 246


State 225

    4 identifier: . "identifier"
    6 valuereference: . identifier
   16 Value: . BuiltinValue
   17      | . DefinedValue
   18 BuiltinValue: . TRUE
   19             | . FALSE
   20             | . NULL
   21             | . "positive integer"
   22             | . "negative integer"
   23             | . HEXINT
   24             | . "positive real number"
   25             | . "negative real number"
   26             | . PLUS_INFINITY
   27             | . MINUS_INFINITY
   28             | . NOT_A_NUMBER
   29 DefinedValue: . valuereference
  179 ExceptionIdentification: Type ':' . Value

    "positive integer"      shift, and go to state 107
    "negative integer"      shift, and go to state 108
    HEXINT                  shift, and go to state 109
    "identifier"            shift, and go to state 4
    PLUS_INFINITY           shift, and go to state 110
    MINUS_INFINITY          shift, and go to state 111
    NOT_A_NUMBER            shift, and go to state 112
    TRUE                    shift, and go to state 113
    FALSE                   shift, and go to state 114
    NULL                    shift, and go to state 115
    "positive real number"  shift, and go to state 116
    "negative real number"  shift, and go to state 117

    identifier      go to state 6
    valuereference  go to state 81
    Value           go to state 247
    BuiltinValue    go to state 120
    DefinedValue    go to state 121


State 226

    3 empty: . %empty  [COMPONENTS, "identifier"]
    7 number: . "positive integer"
    8       | . "negative integer"
  104 ExtensionAdditionGroup: "[[" . VersionNumber ComponentTypeList "]]"
  105 VersionNumber: . empty
  106              | . number ':'

    "positive integer"  shift, and go to state 78
    "negative integer"  shift, and go to state 79

    $default  reduce using rule 3 (empty)

    empty          go to state 248
    number         go to state 249
    VersionNumber  go to state 250


State 227

   89 OptionalExtensionMarker: ',' "..." .

    $default  reduce using rule 89 (OptionalExtensionMarker)


State 228

   98 ExtensionAdditions: ',' ExtensionAdditionList .  ['}', ',']
  101 ExtensionAdditionList: ExtensionAdditionList . ',' ExtensionAddition

    ','  shift, and go to state 251

    ','       [reduce using rule 98 (ExtensionAdditions)]
    $default  reduce using rule 98 (ExtensionAdditions)


State 229

  100 ExtensionAdditionList: ExtensionAddition .

    $default  reduce using rule 100 (ExtensionAdditionList)


State 230

  103 ExtensionAddition: ExtensionAdditionGroup .

    $default  reduce using rule 103 (ExtensionAddition)


State 231

  102 ExtensionAddition: ComponentType .

    $default  reduce using rule 102 (ExtensionAddition)


State 232

   87 SequenceType: SEQUENCE '{' "..." ExceptionSpec OptionalExtensionMarker '}' .

    $default  reduce using rule 87 (SequenceType)


State 233

   89 OptionalExtensionMarker: ',' . "..."
   97 ExtensionEndMarker: ',' . "..."

    "..."  shift, and go to state 252


State 234

   90 OptionalExtensionMarker: empty .

    $default  reduce using rule 90 (OptionalExtensionMarker)


State 235

   95 ComponentTypeLists: "..." ExceptionSpec ExtensionAdditions OptionalExtensionMarker .

    $default  reduce using rule 95 (ComponentTypeLists)


State 236

   94 ComponentTypeLists: "..." ExceptionSpec ExtensionAdditions ExtensionEndMarker . ',' RootComponentTypeList

    ','  shift, and go to state 253


State 237

    3 empty: . %empty  ['}', ',']
   92 ComponentTypeLists: RootComponentTypeList ',' "..." ExceptionSpec . ExtensionAdditions OptionalExtensionMarker
   93                   | RootComponentTypeList ',' "..." ExceptionSpec . ExtensionAdditions ExtensionEndMarker ',' RootComponentTypeList
   98 ExtensionAdditions: . ',' ExtensionAdditionList
   99                   | . empty

    ','  shift, and go to state 254

    ','       [reduce using rule 3 (empty)]
    $default  reduce using rule 3 (empty)

    empty               go to state 255
    ExtensionAdditions  go to state 256


State 238

    4 identifier: . "identifier"
    6 valuereference: . identifier
   16 Value: . BuiltinValue
   17      | . DefinedValue
   18 BuiltinValue: . TRUE
   19             | . FALSE
   20             | . NULL
   21             | . "positive integer"
   22             | . "negative integer"
   23             | . HEXINT
   24             | . "positive real number"
   25             | . "negative real number"
   26             | . PLUS_INFINITY
   27             | . MINUS_INFINITY
   28             | . NOT_A_NUMBER
   29 DefinedValue: . valuereference
  151 ElementSetSpecs: ElementSetSpec ',' "..." ',' . ElementSetSpec
  152 ElementSetSpec: . ALL EXCEPT Elements
  153               | . Elements NextElements
  161 Elements: . '(' ElementSetSpec ')'
  162         | . SubTypeElements
  163 SubTypeElements: . SingleValue
  164                | . ValueRange
  165                | . SizeConstraint
  166 SingleValue: . Value
  167 ValueRange: . LowerEndpoint ".." UpperEndpoint
  168 LowerEndpoint: . LowerEndValue
  169              | . LowerEndValue '<'
  172 LowerEndValue: . Value
  173              | . MIN
  176 SizeConstraint: . SIZE Constraint

    SIZE                    shift, and go to state 64
    ALL                     shift, and go to state 105
    MIN                     shift, and go to state 106
    "positive integer"      shift, and go to state 107
    "negative integer"      shift, and go to state 108
    HEXINT                  shift, and go to state 109
    "identifier"            shift, and go to state 4
    PLUS_INFINITY           shift, and go to state 110
    MINUS_INFINITY          shift, and go to state 111
    NOT_A_NUMBER            shift, and go to state 112
    TRUE                    shift, and go to state 113
    FALSE                   shift, and go to state 114
    NULL                    shift, and go to state 115
    "positive real number"  shift, and go to state 116
    "negative real number"  shift, and go to state 117
    '('                     shift, and go to state 118

    identifier       go to state 6
    valuereference   go to state 81
    Value            go to state 119
    BuiltinValue     go to state 120
    DefinedValue     go to state 121
    ElementSetSpec   go to state 257
    Elements         go to state 126
    SubTypeElements  go to state 127
    SingleValue      go to state 128
    ValueRange       go to state 129
    LowerEndpoint    go to state 130
    LowerEndValue    go to state 131
    SizeConstraint   go to state 132


State 239

  155 NextElements: IntersectionMark Elements NextElements .

    $default  reduce using rule 155 (NextElements)


State 240

  154 NextElements: UnionMark Elements NextElements .

    $default  reduce using rule 154 (NextElements)


State 241

  171 UpperEndpoint: '<' UpperEndValue .

    $default  reduce using rule 171 (UpperEndpoint)


State 242

   66 NamedNumber: identifier '(' NamedNumberNumber ')' .

    $default  reduce using rule 66 (NamedNumber)


State 243

   73 Enumerations: RootEnumeration ',' "..." ExceptionSpec .  ['}']
   74             | RootEnumeration ',' "..." ExceptionSpec . ',' AdditionalEnumeration

    ','  shift, and go to state 258

    $default  reduce using rule 73 (Enumerations)


State 244

    4 identifier: . "identifier"
  113 NamedType: . identifier optTypePrefix Type
  124 ExtensionAdditionAlternatives: ',' . ExtensionAdditionAlternativesList
  126 ExtensionAdditionAlternativesList: . ExtensionAdditionAlternative
  127                                  | . ExtensionAdditionAlternativesList ',' ExtensionAdditionAlternative
  128 ExtensionAdditionAlternative: . ExtensionAdditionAlternativesGroup
  129                             | . NamedType
  130 ExtensionAdditionAlternativesGroup: . "[[" VersionNumber AlternativeTypeList "]]"

    "[["          shift, and go to state 259
    "identifier"  shift, and go to state 4

    identifier                          go to state 91
    NamedType                           go to state 260
    ExtensionAdditionAlternativesList   go to state 261
    ExtensionAdditionAlternative        go to state 262
    ExtensionAdditionAlternativesGroup  go to state 263


State 245

  125 ExtensionAdditionAlternatives: empty .

    $default  reduce using rule 125 (ExtensionAdditionAlternatives)


State 246

    3 empty: . %empty  ['}']
   89 OptionalExtensionMarker: . ',' "..."
   90                        | . empty
  122 AlternativeTypeLists: RootAlternativeTypeList ',' "..." ExceptionSpec ExtensionAdditionAlternatives . OptionalExtensionMarker

    ','  shift, and go to state 264

    $default  reduce using rule 3 (empty)

    empty                    go to state 234
    OptionalExtensionMarker  go to state 265


State 247

  179 ExceptionIdentification: Type ':' Value .

    $default  reduce using rule 179 (ExceptionIdentification)


State 248

  105 VersionNumber: empty .

    $default  reduce using rule 105 (VersionNumber)


State 249

  106 VersionNumber: number . ':'

    ':'  shift, and go to state 266


State 250

    4 identifier: . "identifier"
  104 ExtensionAdditionGroup: "[[" VersionNumber . ComponentTypeList "]]"
  107 ComponentTypeList: . ComponentType
  108                  | . ComponentTypeList ',' ComponentType
  109 ComponentType: . NamedType
  110              | . NamedType OPTIONAL
  111              | . NamedType DEFAULT Value
  112              | . COMPONENTS OF Type
  113 NamedType: . identifier optTypePrefix Type

    COMPONENTS    shift, and go to state 98
    "identifier"  shift, and go to state 4

    identifier         go to state 91
    ComponentTypeList  go to state 267
    ComponentType      go to state 103
    NamedType          go to state 104


State 251

    4 identifier: . "identifier"
  101 ExtensionAdditionList: ExtensionAdditionList ',' . ExtensionAddition
  102 ExtensionAddition: . ComponentType
  103                  | . ExtensionAdditionGroup
  104 ExtensionAdditionGroup: . "[[" VersionNumber ComponentTypeList "]]"
  109 ComponentType: . NamedType
  110              | . NamedType OPTIONAL
  111              | . NamedType DEFAULT Value
  112              | . COMPONENTS OF Type
  113 NamedType: . identifier optTypePrefix Type

    "[["          shift, and go to state 226
    COMPONENTS    shift, and go to state 98
    "identifier"  shift, and go to state 4

    identifier              go to state 91
    ExtensionAddition       go to state 268
    ExtensionAdditionGroup  go to state 230
    ComponentType           go to state 231
    NamedType               go to state 104


State 252

   89 OptionalExtensionMarker: ',' "..." .  ['}']
   97 ExtensionEndMarker: ',' "..." .  [',']

    ','       reduce using rule 97 (ExtensionEndMarker)
    $default  reduce using rule 89 (OptionalExtensionMarker)


State 253

    4 identifier: . "identifier"
   94 ComponentTypeLists: "..." ExceptionSpec ExtensionAdditions ExtensionEndMarker ',' . RootComponentTypeList
   96 RootComponentTypeList: . ComponentTypeList
  107 ComponentTypeList: . ComponentType
  108                  | . ComponentTypeList ',' ComponentType
  109 ComponentType: . NamedType
  110              | . NamedType OPTIONAL
  111              | . NamedType DEFAULT Value
  112              | . COMPONENTS OF Type
  113 NamedType: . identifier optTypePrefix Type

    COMPONENTS    shift, and go to state 98
    "identifier"  shift, and go to state 4

    identifier             go to state 91
    RootComponentTypeList  go to state 269
    ComponentTypeList      go to state 102
    ComponentType          go to state 103
    NamedType              go to state 104


State 254

    4 identifier: . "identifier"
   98 ExtensionAdditions: ',' . ExtensionAdditionList
  100 ExtensionAdditionList: . ExtensionAddition
  101                      | . ExtensionAdditionList ',' ExtensionAddition
  102 ExtensionAddition: . ComponentType
  103                  | . ExtensionAdditionGroup
  104 ExtensionAdditionGroup: . "[[" VersionNumber ComponentTypeList "]]"
  109 ComponentType: . NamedType
  110              | . NamedType OPTIONAL
  111              | . NamedType DEFAULT Value
  112              | . COMPONENTS OF Type
  113 NamedType: . identifier optTypePrefix Type

    "[["          shift, and go to state 226
    COMPONENTS    shift, and go to state 98
    "identifier"  shift, and go to state 4

    identifier              go to state 91
    ExtensionAdditionList   go to state 228
    ExtensionAddition       go to state 229
    ExtensionAdditionGroup  go to state 230
    ComponentType           go to state 231
    NamedType               go to state 104


State 255

   99 ExtensionAdditions: empty .

    $default  reduce using rule 99 (ExtensionAdditions)


State 256

    3 empty: . %empty  ['}']
   89 OptionalExtensionMarker: . ',' "..."
   90                        | . empty
   92 ComponentTypeLists: RootComponentTypeList ',' "..." ExceptionSpec ExtensionAdditions . OptionalExtensionMarker
   93                   | RootComponentTypeList ',' "..." ExceptionSpec ExtensionAdditions . ExtensionEndMarker ',' RootComponentTypeList
   97 ExtensionEndMarker: . ',' "..."

    ','  shift, and go to state 233

    $default  reduce using rule 3 (empty)

    empty                    go to state 234
    OptionalExtensionMarker  go to state 270
    ExtensionEndMarker       go to state 271


State 257

  151 ElementSetSpecs: ElementSetSpec ',' "..." ',' ElementSetSpec .

    $default  reduce using rule 151 (ElementSetSpecs)


State 258

    4 identifier: . "identifier"
   66 NamedNumber: . identifier '(' NamedNumberNumber ')'
   74 Enumerations: RootEnumeration ',' "..." ExceptionSpec ',' . AdditionalEnumeration
   76 AdditionalEnumeration: . Enumeration
   77 Enumeration: . EnumerationItem
   78            | . Enumeration ',' EnumerationItem
   79 EnumerationItem: . identifier
   80                | . NamedNumber

    "identifier"  shift, and go to state 4

    identifier             go to state 141
    NamedNumber            go to state 142
    AdditionalEnumeration  go to state 272
    Enumeration            go to state 273
    EnumerationItem        go to state 146


State 259

    3 empty: . %empty  ["identifier"]
    7 number: . "positive integer"
    8       | . "negative integer"
  105 VersionNumber: . empty
  106              | . number ':'
  130 ExtensionAdditionAlternativesGroup: "[[" . VersionNumber AlternativeTypeList "]]"

    "positive integer"  shift, and go to state 78
    "negative integer"  shift, and go to state 79

    $default  reduce using rule 3 (empty)

    empty          go to state 248
    number         go to state 249
    VersionNumber  go to state 274


State 260

  129 ExtensionAdditionAlternative: NamedType .

    $default  reduce using rule 129 (ExtensionAdditionAlternative)


State 261

  124 ExtensionAdditionAlternatives: ',' ExtensionAdditionAlternativesList .  ['}', ',']
  127 ExtensionAdditionAlternativesList: ExtensionAdditionAlternativesList . ',' ExtensionAdditionAlternative

    ','  shift, and go to state 275

    ','       [reduce using rule 124 (ExtensionAdditionAlternatives)]
    $default  reduce using rule 124 (ExtensionAdditionAlternatives)


State 262

  126 ExtensionAdditionAlternativesList: ExtensionAdditionAlternative .

    $default  reduce using rule 126 (ExtensionAdditionAlternativesList)


State 263

  128 ExtensionAdditionAlternative: ExtensionAdditionAlternativesGroup .

    $default  reduce using rule 128 (ExtensionAdditionAlternative)


State 264

   89 OptionalExtensionMarker: ',' . "..."

    "..."  shift, and go to state 227


State 265

  122 AlternativeTypeLists: RootAlternativeTypeList ',' "..." ExceptionSpec ExtensionAdditionAlternatives OptionalExtensionMarker .

    $default  reduce using rule 122 (AlternativeTypeLists)


State 266

  106 VersionNumber: number ':' .

    $default  reduce using rule 106 (VersionNumber)


State 267

  104 ExtensionAdditionGroup: "[[" VersionNumber ComponentTypeList . "]]"
  108 ComponentTypeList: ComponentTypeList . ',' ComponentType

    "]]"  shift, and go to state 276
    ','   shift, and go to state 164


State 268

  101 ExtensionAdditionList: ExtensionAdditionList ',' ExtensionAddition .

    $default  reduce using rule 101 (ExtensionAdditionList)


State 269

   94 ComponentTypeLists: "..." ExceptionSpec ExtensionAdditions ExtensionEndMarker ',' RootComponentTypeList .

    $default  reduce using rule 94 (ComponentTypeLists)


State 270

   92 ComponentTypeLists: RootComponentTypeList ',' "..." ExceptionSpec ExtensionAdditions OptionalExtensionMarker .

    $default  reduce using rule 92 (ComponentTypeLists)


State 271

   93 ComponentTypeLists: RootComponentTypeList ',' "..." ExceptionSpec ExtensionAdditions ExtensionEndMarker . ',' RootComponentTypeList

    ','  shift, and go to state 277


State 272

   74 Enumerations: RootEnumeration ',' "..." ExceptionSpec ',' AdditionalEnumeration .

    $default  reduce using rule 74 (Enumerations)


State 273

   76 AdditionalEnumeration: Enumeration .  ['}']
   78 Enumeration: Enumeration . ',' EnumerationItem

    ','  shift, and go to state 186

    $default  reduce using rule 76 (AdditionalEnumeration)


State 274

    4 identifier: . "identifier"
  113 NamedType: . identifier optTypePrefix Type
  130 ExtensionAdditionAlternativesGroup: "[[" VersionNumber . AlternativeTypeList "]]"
  131 AlternativeTypeList: . NamedType
  132                    | . AlternativeTypeList ',' NamedType

    "identifier"  shift, and go to state 4

    identifier           go to state 91
    NamedType            go to state 92
    AlternativeTypeList  go to state 278


State 275

    4 identifier: . "identifier"
  113 NamedType: . identifier optTypePrefix Type
  127 ExtensionAdditionAlternativesList: ExtensionAdditionAlternativesList ',' . ExtensionAdditionAlternative
  128 ExtensionAdditionAlternative: . ExtensionAdditionAlternativesGroup
  129                             | . NamedType
  130 ExtensionAdditionAlternativesGroup: . "[[" VersionNumber AlternativeTypeList "]]"

    "[["          shift, and go to state 259
    "identifier"  shift, and go to state 4

    identifier                          go to state 91
    NamedType                           go to state 260
    ExtensionAdditionAlternative        go to state 279
    ExtensionAdditionAlternativesGroup  go to state 263


State 276

  104 ExtensionAdditionGroup: "[[" VersionNumber ComponentTypeList "]]" .

    $default  reduce using rule 104 (ExtensionAdditionGroup)


State 277

    4 identifier: . "identifier"
   93 ComponentTypeLists: RootComponentTypeList ',' "..." ExceptionSpec ExtensionAdditions ExtensionEndMarker ',' . RootComponentTypeList
   96 RootComponentTypeList: . ComponentTypeList
  107 ComponentTypeList: . ComponentType
  108                  | . ComponentTypeList ',' ComponentType
  109 ComponentType: . NamedType
  110              | . NamedType OPTIONAL
  111              | . NamedType DEFAULT Value
  112              | . COMPONENTS OF Type
  113 NamedType: . identifier optTypePrefix Type

    COMPONENTS    shift, and go to state 98
    "identifier"  shift, and go to state 4

    identifier             go to state 91
    RootComponentTypeList  go to state 280
    ComponentTypeList      go to state 102
    ComponentType          go to state 103
    NamedType              go to state 104


State 278

  130 ExtensionAdditionAlternativesGroup: "[[" VersionNumber AlternativeTypeList . "]]"
  132 AlternativeTypeList: AlternativeTypeList . ',' NamedType

    "]]"  shift, and go to state 281
    ','   shift, and go to state 157


State 279

  127 ExtensionAdditionAlternativesList: ExtensionAdditionAlternativesList ',' ExtensionAdditionAlternative .

    $default  reduce using rule 127 (ExtensionAdditionAlternativesList)


State 280

   93 ComponentTypeLists: RootComponentTypeList ',' "..." ExceptionSpec ExtensionAdditions ExtensionEndMarker ',' RootComponentTypeList .

    $default  reduce using rule 93 (ComponentTypeLists)


State 281

  130 ExtensionAdditionAlternativesGroup: "[[" VersionNumber AlternativeTypeList "]]" .

    $default  reduce using rule 130 (ExtensionAdditionAlternativesGroup)
